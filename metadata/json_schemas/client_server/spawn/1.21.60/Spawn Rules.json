{
  "$id": "662705489",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "1088251937": {
      "description": "Filters allow data objects to specify test criteria which allows their use. Filters can be defined by a single object of type (Filter Test), an array of tests, collection groups, or a combination of these objects.",
      "oneOf": [
        {
          "$ref": "#/definitions/4150989894"
        },
        {
          "items": {
            "$ref": "#/definitions/1088251937",
            "description": "Filters allow data objects to specify test criteria which allows their use. Filters can be defined by a single object of type (Filter Test), an array of tests, collection groups, or a combination of these objects."
          },
          "type": "array"
        },
        {
          "properties": {
            "AND": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates all tests in the group, all must pass in order for the group to pass."
            },
            "NOT": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates all tests in the group, all must fail in order for the group to pass."
            },
            "OR": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates tests in the group, one or more must pass in order for the group to pass."
            },
            "all": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates all tests in the group, all must pass in order for the group to pass."
            },
            "all_of": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates all tests in the group, all must pass in order for the group to pass."
            },
            "any": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates tests in the group, one or more must pass in order for the group to pass."
            },
            "any_of": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates tests in the group, one or more must pass in order for the group to pass."
            },
            "none_of": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates all tests in the group, all must fail in order for the group to pass."
            }
          },
          "type": "object"
        }
      ],
      "title": "Filter Group"
    },
    "1493335182": {
      "title": "Reference",
      "type": "string"
    },
    "1564953790": {
      "description": "Placement rule defintions",
      "properties": {
        "heightmap": {
          "description": "Defines the heightmap filter for initial entity placement during chunk loading.",
          "type": "string"
        },
        "spawn_obstruction_predicate": {
          "description": "Checks for obstructions that might prevent entity spawning.",
          "type": "string"
        },
        "spawn_predicate": {
          "description": "Determines if an entity is valid to spawn based on specific conditions.",
          "type": "string"
        },
        "type": {
          "description": "Specifies the environment where the entity can spawn (e.g., on ground, in water, etc.).",
          "type": "string"
        }
      },
      "title": "Placement",
      "type": "object"
    },
    "1743975235": {
      "properties": {
        "identifier": {
          "type": "string"
        }
      },
      "required": [
        "identifier"
      ],
      "title": "Description",
      "type": "object"
    },
    "3424466759": {
      "properties": {
        "entity_type": {
          "$ref": "#/definitions/1493335182",
          "description": "Specifies the entity type to spawn when selected"
        },
        "min_guaranteed": {
          "description": "The minimum number of this permutation's entity to spawn",
          "minimum": 0,
          "type": "integer"
        },
        "weight": {
          "description": "The likelihood of this to be selected over the combined weight of all the entities in the permutation",
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "weight"
      ],
      "title": "PermuteType",
      "type": "object"
    },
    "3629386827": {
      "description": "Biome specific rules for spawning",
      "properties": {
        "biome_filter": {
          "$ref": "#/definitions/1088251937",
          "description": "Filter to limit spawns to specific biomes."
        },
        "herds": {
          "description": "Configurations for size and events when spawning groups of entities",
          "items": {
            "$ref": "#/definitions/98158070"
          },
          "type": "array"
        },
        "mob_event_filter": {
          "description": "Filter to exclude entities if the event is disabled.",
          "type": "string"
        },
        "permute_types": {
          "description": "List of randomly choosable permutations of the entity",
          "items": {
            "$ref": "#/definitions/3424466759"
          },
          "type": "array"
        },
        "weight": {
          "description": "The weight used when comparing other entities that can  spawn within a biome",
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "weight"
      ],
      "title": "BiomeConditions",
      "type": "object"
    },
    "4150989894": {
      "properties": {
        "domain": {
          "description": "The domain the test should be performed in.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "operator": {
          "description": "The comparison to apply with 'value'.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "subject": {
          "description": "The subject of this filter test.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "test": {
          "description": "The name of the test to apply.",
          "type": "string"
        },
        "value": {
          "description": "The value being compared with the test.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "test"
      ],
      "title": "Filter Test",
      "type": "object"
    },
    "98158070": {
      "properties": {
        "event": {
          "description": "An event to run after 'event_skip_count' number of entities in the group have spawned",
          "type": "string"
        },
        "event_skip_count": {
          "description": "Number of entities spawned in the group to skip before running the event",
          "type": "integer"
        },
        "initial_event": {
          "description": "Event run for the first 'initial_event_count' number of the group are placed.",
          "type": "string"
        },
        "initial_event_count": {
          "description": "Number of times that 'initial_event' can run",
          "type": "integer"
        },
        "max": {
          "description": "Maximum number of entities in this group to attempt to spawn",
          "minimum": 0,
          "type": "integer"
        },
        "min": {
          "description": "Minimum number of entities in this group to attempt to spawn",
          "minimum": 0,
          "type": "integer"
        }
      },
      "title": "Herd",
      "type": "object"
    }
  },
  "properties": {
    "conditions": {
      "items": {
        "$ref": "#/definitions/3629386827",
        "description": "Biome specific rules for spawning"
      },
      "type": "array"
    },
    "description": {
      "$ref": "#/definitions/1743975235"
    },
    "placement": {
      "$ref": "#/definitions/1564953790",
      "description": "Placement rule defintions"
    }
  },
  "required": [
    "description"
  ],
  "title": "Spawn Rules",
  "type": "object",
  "x-format-version": "1.21.60"
}