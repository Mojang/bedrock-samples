{
  "$id": "3883188534",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "1088251937": {
      "description": "Filters allow data objects to specify test criteria which allows their use. Filters can be defined by a single object of type (Filter Test), an array of tests, collection groups, or a combination of these objects.",
      "oneOf": [
        {
          "$ref": "#/definitions/4150989894"
        },
        {
          "items": {
            "$ref": "#/definitions/1088251937",
            "description": "Filters allow data objects to specify test criteria which allows their use. Filters can be defined by a single object of type (Filter Test), an array of tests, collection groups, or a combination of these objects."
          },
          "type": "array"
        },
        {
          "properties": {
            "AND": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates all tests in the group, all must pass in order for the group to pass."
            },
            "NOT": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates all tests in the group, all must fail in order for the group to pass."
            },
            "OR": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates tests in the group, one or more must pass in order for the group to pass."
            },
            "all": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates all tests in the group, all must pass in order for the group to pass."
            },
            "all_of": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates all tests in the group, all must pass in order for the group to pass."
            },
            "any": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates tests in the group, one or more must pass in order for the group to pass."
            },
            "any_of": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates tests in the group, one or more must pass in order for the group to pass."
            },
            "none_of": {
              "$ref": "#/definitions/1088251937",
              "description": "Evaluates all tests in the group, all must fail in order for the group to pass."
            }
          },
          "type": "object"
        }
      ],
      "title": "Filter Group"
    },
    "2176758423": {
      "description": "Scatter probability represented by an expression or an object with a numerator and denominator.",
      "oneOf": [
        {
          "$ref": "#/definitions/3178719147"
        },
        {
          "properties": {
            "denominator": {
              "description": "Denominator for scatter probability.",
              "minimum": 1,
              "type": "integer"
            },
            "numerator": {
              "description": "Numerator for scatter probability.",
              "minimum": 1,
              "type": "integer"
            }
          },
          "required": [
            "denominator",
            "numerator"
          ],
          "type": "object"
        }
      ],
      "title": "Scatter Chance"
    },
    "2195141389": {
      "description": "Controls the scatter distribution of a particular object.",
      "properties": {
        "coordinate_eval_order": {
          "description": "The order in which coordinates will be evaluated. Should be used when a coordinate depends on another. If omitted, defaults to \"xzy\". Supported orders are defined by \"Coordinate Evaluation Order\".",
          "enum": [
            "xyz",
            "xzy",
            "yxz",
            "yzx",
            "zxy",
            "zyx"
          ],
          "title": "Coordinate Evaluation Order",
          "type": "string"
        },
        "iterations": {
          "$ref": "#/definitions/3178719147",
          "description": "Number of scattered positions to generate."
        },
        "scatter_chance": {
          "$ref": "#/definitions/2176758423",
          "description": "Probability that this scatter will occur. Not evaluated each iteration; either no iterations will run, or all will."
        },
        "x": {
          "$ref": "#/definitions/4150871210",
          "description": "Distribution for the coordinate (evaluated each iteration)."
        },
        "y": {
          "$ref": "#/definitions/4150871210",
          "description": "Distribution for the coordinate (evaluated each iteration)."
        },
        "z": {
          "$ref": "#/definitions/4150871210",
          "description": "Distribution for the coordinate (evaluated each iteration)."
        }
      },
      "required": [
        "iterations",
        "x",
        "y",
        "z"
      ],
      "title": "Scatter Params",
      "type": "object"
    },
    "2267778531": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "properties": {
            "expression": {
              "type": "string"
            },
            "version": {
              "type": "integer"
            }
          },
          "required": [
            "expression",
            "version"
          ],
          "type": "object"
        }
      ],
      "title": "Molang string"
    },
    "3178719147": {
      "oneOf": [
        {
          "$ref": "#/definitions/2267778531"
        },
        {
          "type": "number"
        }
      ],
      "title": "Molang expression"
    },
    "3683814853": {
      "properties": {
        "identifier": {
          "description": "The name of this feature rule in the format 'namespace_name:rule_name'. 'rule_name' must match the filename.",
          "type": "string"
        },
        "places_feature": {
          "description": "Named reference to the feature controlled by this rule.",
          "type": "string"
        }
      },
      "required": [
        "identifier",
        "places_feature"
      ],
      "title": "Feature Rule Description",
      "type": "object"
    },
    "4150871210": {
      "description": "Represents the scatter distrubution over a coordinate (x/y/z), can also be built by an expression.",
      "oneOf": [
        {
          "$ref": "#/definitions/3178719147"
        },
        {
          "properties": {
            "distribution": {
              "description": "Type of distribution. Supported distributions are defined by \"Random Distribution Type\".",
              "enum": [
                "uniform",
                "gaussian",
                "inverse_gaussian",
                "triangle",
                "fixed_grid",
                "jittered_grid"
              ],
              "title": "Random Distribution Type",
              "type": "string"
            },
            "extent": {
              "description": "Lower and upper bound (inclusive) of the scatter range, as an offset from the input point to scatter around.",
              "items": {
                "$ref": "#/definitions/3178719147"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            "grid_offset": {
              "description": "When the distribution type is grid, defines the offset along this axis.",
              "minimum": 0,
              "type": "integer"
            },
            "step_size": {
              "description": "When the distribution type is grid, defines the distance between steps along this axis.",
              "minimum": 1,
              "type": "integer"
            }
          },
          "required": [
            "distribution",
            "extent"
          ],
          "type": "object"
        }
      ],
      "title": "Coordinate Range"
    },
    "4150989894": {
      "properties": {
        "domain": {
          "description": "The domain the test should be performed in.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "operator": {
          "description": "The comparison to apply with 'value'.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "subject": {
          "description": "The subject of this filter test.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "test": {
          "description": "The name of the test to apply.",
          "type": "string"
        },
        "value": {
          "description": "The value being compared with the test.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "test"
      ],
      "title": "Filter Test",
      "type": "object"
    },
    "4231469203": {
      "properties": {
        "minecraft:biome_filter": {
          "$ref": "#/definitions/1088251937",
          "description": "List of filter tests to determine which biomes this rule will attach to."
        },
        "placement_pass": {
          "description": "When the feature should be placed relative to others. Earlier passes in the list are guaranteed to occur before later passes. Order is not guaranteed within each pass.",
          "type": "string"
        }
      },
      "required": [
        "placement_pass"
      ],
      "title": "Feature Rule Conditions",
      "type": "object"
    }
  },
  "properties": {
    "conditions": {
      "$ref": "#/definitions/4231469203",
      "description": "Parameters to control where and when the feature will be placed."
    },
    "description": {
      "$ref": "#/definitions/3683814853",
      "description": "Identifier for the Feature Rule and Feture to place."
    },
    "distribution": {
      "$ref": "#/definitions/2195141389",
      "description": "Parameters controlling the initial scatter of the feature."
    }
  },
  "required": [
    "conditions",
    "description"
  ],
  "title": "Feature Rule Definition",
  "type": "object",
  "x-format-version": "1.21.20"
}