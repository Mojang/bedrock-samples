{
  "$id": "2655564081",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "1057040869": {
      "description": "Defines if the entity ticks the world and the radius around it to tick.",
      "properties": {
        "distance_to_players": {
          "description": "The distance at which the closest player has to be before this entity despawns. This option will be ignored if never_despawn is true. Default value: 128.",
          "minimum": 128,
          "type": "number"
        },
        "never_despawn": {
          "description": "If true, this entity will not despawn even if players are far away. If false, distance_to_players will be used to determine when to despawn. Default value: true.",
          "type": "boolean"
        },
        "radius": {
          "description": "The area around the entity to tick. Allowed range: 2-6. Default value: 2.",
          "maximum": 6,
          "minimum": 2,
          "type": "integer"
        }
      },
      "title": "minecraft:tick_world",
      "type": "object"
    },
    "1057349585": {
      "properties": {
        "max": {
          "type": "number"
        },
        "min": {
          "type": "number"
        }
      },
      "title": "FloatRange",
      "type": "object"
    },
    "1143284943": {
      "description": "Allows this entity to damage a target by using a running attack.",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "max_distance": {
          "description": "A charge attack cannot start if the entity is farther than this distance to the target. Default value: 3.",
          "type": "number"
        },
        "min_distance": {
          "description": "A charge attack cannot start if the entity is closer than this distance to the target. Default value: 2.",
          "type": "number"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "sound_event": {
          "enum": [
            "item.use.on",
            "hit",
            "step",
            "step.baby",
            "fly",
            "jump",
            "jump.prevent",
            "break",
            "place",
            "heavy.step",
            "gallop",
            "fall",
            "hurt",
            "hurt.baby",
            "hurt.in.water",
            "death",
            "death.baby",
            "death.in.water",
            "death.to.zombie",
            "ambient",
            "ambient.baby",
            "ambient.in.water",
            "ambient.in.air",
            "ambient.tame",
            "ambient.pollinate",
            "breathe",
            "mad",
            "boost",
            "bow",
            "squish.big",
            "squish.small",
            "fall.big",
            "fall.small",
            "splash",
            "fizz",
            "flap",
            "swim",
            "drink",
            "drink.honey",
            "drink.milk",
            "eat",
            "takeoff",
            "shake",
            "plop",
            "land",
            "saddle",
            "armor",
            "mob.armor_stand.place",
            "add.chest",
            "throw",
            "attack",
            "attack.nodamage",
            "attack.strong",
            "warn",
            "shear",
            "milk",
            "thunder",
            "explode",
            "fire",
            "ignite",
            "fuse",
            "stare",
            "spawn",
            "born",
            "shoot",
            "break.block",
            "launch",
            "blast",
            "large.blast",
            "twinkle",
            "remedy",
            "unfect",
            "convert_to_drowned",
            "levelup",
            "bow.hit",
            "bullet.hit",
            "extinguish.fire",
            "item.fizz",
            "chest.open",
            "chest.closed",
            "shulkerbox.open",
            "shulkerbox.closed",
            "enderchest.open",
            "enderchest.closed",
            "power.on",
            "power.off",
            "attach",
            "detach",
            "deny",
            "tripod",
            "pop",
            "drop.slot",
            "note",
            "thorns",
            "piston.in",
            "piston.out",
            "portal",
            "water",
            "lava.pop",
            "lava",
            "beacon.activate",
            "beacon.ambient",
            "beacon.deactivate",
            "beacon.power",
            "conduit.activate",
            "conduit.ambient",
            "conduit.attack",
            "conduit.deactivate",
            "conduit.short",
            "bubble.pop",
            "bubble.up",
            "bubble.upinside",
            "bubble.down",
            "bubble.downinside",
            "burp",
            "bucket.fill.water",
            "bucket.empty.water",
            "bucket.fill.lava",
            "bucket.empty.lava",
            "bucket.fill.fish",
            "bucket.empty.fish",
            "armor.equip_chain",
            "armor.equip_diamond",
            "armor.equip_elytra",
            "armor.equip_generic",
            "armor.equip_gold",
            "armor.equip_iron",
            "armor.equip_leather",
            "armor.equip_netherite",
            "record.13",
            "record.cat",
            "record.blocks",
            "record.chirp",
            "record.creator",
            "record.creator_music_box",
            "record.far",
            "record.mall",
            "record.mellohi",
            "record.stal",
            "record.strad",
            "record.ward",
            "record.11",
            "record.wait",
            "record.pigstep",
            "record.precipice",
            "record.relic",
            "record.otherside",
            "record.5",
            "record.tears",
            "record.lava_chicken",
            "flop",
            "elderguardian.curse",
            "teleport",
            "shulker.open",
            "shulker.close",
            "mob.warning",
            "mob.warning.baby",
            "haggle",
            "haggle.yes",
            "haggle.no",
            "haggle.idle",
            "disappeared",
            "reappeared",
            "chorusgrow",
            "chorusdeath",
            "glass",
            "potion.brewed",
            "cast.spell",
            "prepare.attack",
            "prepare.summon",
            "prepare.wololo",
            "fang",
            "charge",
            "camera.take_picture",
            "leashknot.break",
            "leashknot.place",
            "growl",
            "whine",
            "pant",
            "purr",
            "purreow",
            "death.min.volume",
            "death.mid.volume",
            "imitate.blaze",
            "imitate.cave_spider",
            "imitate.creeper",
            "imitate.elder_guardian",
            "imitate.ender_dragon",
            "imitate.enderman",
            "imitate.endermite",
            "imitate.evocation_illager",
            "imitate.ghast",
            "imitate.husk",
            "imitate.magma_cube",
            "imitate.polar_bear",
            "imitate.shulker",
            "imitate.silverfish",
            "imitate.skeleton",
            "imitate.slime",
            "imitate.spider",
            "imitate.stray",
            "imitate.vex",
            "imitate.vindication_illager",
            "imitate.witch",
            "imitate.wither",
            "imitate.wither_skeleton",
            "imitate.wolf",
            "imitate.zombie",
            "imitate.zombie_pigman",
            "imitate.zombie_villager",
            "block.end_portal_frame.fill",
            "block.end_portal.spawn",
            "random.anvil_use",
            "bottle.dragonbreath",
            "balloonpop",
            "sparkler.active",
            "item.trident.hit",
            "item.trident.hit_ground",
            "item.trident.return",
            "item.trident.riptide_1",
            "item.trident.riptide_2",
            "item.trident.riptide_3",
            "item.trident.throw",
            "item.trident.thunder",
            "block.fletching_table.use",
            "elemconstruct.open",
            "icebomb.hit",
            "lt.reaction.icebomb",
            "lt.reaction.bleach",
            "lt.reaction.epaste",
            "lt.reaction.epaste2",
            "lt.reaction.fertilizer",
            "lt.reaction.fireball",
            "lt.reaction.mgsalt",
            "lt.reaction.miscfire",
            "lt.reaction.fire",
            "lt.reaction.miscexplosion",
            "lt.reaction.miscmystical",
            "lt.reaction.miscmystical2",
            "lt.reaction.product",
            "sparkler.use",
            "glowstick.use",
            "block.turtle_egg.break",
            "block.turtle_egg.crack",
            "block.turtle_egg.hatch",
            "block.turtle_egg.attack",
            "block.sniffer_egg.crack",
            "block.sniffer_egg.hatch",
            "block.frog_spawn.hatch",
            "block.frog_spawn.break",
            "swoop",
            "presneeze",
            "sneeze",
            "scared",
            "ambient.aggressive",
            "ambient.worried",
            "cant_breed",
            "block.scaffolding.climb",
            "block.bamboo_sapling.place",
            "crossbow.loading.start",
            "crossbow.loading.middle",
            "crossbow.loading.end",
            "crossbow.shoot",
            "crossbow.quick_charge.start",
            "crossbow.quick_charge.middle",
            "crossbow.quick_charge.end",
            "item.shield.block",
            "portal.travel",
            "item.book.put",
            "block.grindstone.use",
            "block.bell.hit",
            "block.campfire.crackle",
            "block.sweet_berry_bush.hurt",
            "block.sweet_berry_bush.pick",
            "block.stonecutter.use",
            "block.cartography_table.use",
            "block.composter.empty",
            "block.composter.fill",
            "block.composter.fill_success",
            "block.composter.ready",
            "roar",
            "stun",
            "block.barrel.open",
            "block.barrel.close",
            "raid.horn",
            "ui.stonecutter.take_result",
            "ui.cartography_table.take_result",
            "ui.loom.take_result",
            "block.smoker.smoke",
            "block.blastfurnace.fire_crackle",
            "block.smithing_table.use",
            "block.loom.use",
            "ambient.in.raid",
            "screech",
            "sleep",
            "block.furnace.lit",
            "convert_mooshroom",
            "milk_suspiciously",
            "celebrate",
            "block.beehive.enter",
            "block.beehive.exit",
            "block.beehive.shear",
            "block.beehive.work",
            "block.beehive.drip",
            "ambient.cave",
            "angry",
            "retreat",
            "converted_to_zombified",
            "step_lava",
            "tempt",
            "panic",
            "admire",
            "particle.soul_escape.quiet",
            "particle.soul_escape.loud",
            "respawn_anchor.charge",
            "respawn_anchor.deplete",
            "respawn_anchor.set_spawn",
            "respawn_anchor.ambient",
            "ambient.crimson_forest.mood",
            "ambient.warped_forest.mood",
            "ambient.soulsand_valley.mood",
            "ambient.nether_wastes.mood",
            "ambient.crimson_forest.additions",
            "ambient.warped_forest.additions",
            "ambient.soulsand_valley.additions",
            "ambient.nether_wastes.additions",
            "ambient.basalt_deltas.additions",
            "ambient.crimson_forest.loop",
            "ambient.warped_forest.loop",
            "ambient.soulsand_valley.loop",
            "ambient.nether_wastes.loop",
            "ambient.basalt_deltas.loop",
            "lodestone_compass.link_compass_to_lodestone",
            "ambient.basalt_deltas.mood",
            "power.on.sculk_sensor",
            "power.off.sculk_sensor",
            "smithing_table.use",
            "default",
            "lay_egg",
            "lay_spawn",
            "bucket.fill.powder_snow",
            "bucket.empty.powder_snow",
            "cauldron_drip.water.pointed_dripstone",
            "cauldron_drip.lava.pointed_dripstone",
            "tilt_down.big_dripleaf",
            "tilt_up.big_dripleaf",
            "drip.water.pointed_dripstone",
            "pick_berries.cave_vines",
            "drip.lava.pointed_dripstone",
            "copper.wax.on",
            "copper.wax.off",
            "scrape",
            "item.spyglass.use",
            "item.spyglass.stop_using",
            "chime.amethyst_block",
            "mob.player.hurt_drown",
            "mob.player.hurt_on_fire",
            "mob.player.hurt_freeze",
            "ambient.screamer",
            "hurt.screamer",
            "death.screamer",
            "milk.screamer",
            "jump_to_block",
            "pre_ram",
            "pre_ram.screamer",
            "ram_impact",
            "ram_impact.screamer",
            "squid.ink_squirt",
            "glow_squid.ink_squirt",
            "convert_to_stray",
            "cake.add_candle",
            "extinguish.candle",
            "ambient.candle",
            "block.click",
            "block.click.fail",
            "block.sculk_catalyst.bloom",
            "block.sculk_shrieker.shriek",
            "nearby_close",
            "nearby_closer",
            "nearby_closest",
            "agitated",
            "listening",
            "heartbeat",
            "tongue",
            "item_given",
            "item_taken",
            "item_thrown",
            "irongolem.crack",
            "irongolem.repair",
            "horn_break",
            "horn_call0",
            "horn_call1",
            "horn_call2",
            "horn_call3",
            "horn_call4",
            "horn_call5",
            "horn_call6",
            "horn_call7",
            "imitate.warden",
            "listening_angry",
            "sonic_boom",
            "sonic_charge",
            "convert_to_frog",
            "block.sculk.spread",
            "charge.sculk",
            "block.sculk_sensor.place",
            "block.sculk_shrieker.place",
            "block.enchanting_table.use",
            "bundle.drop_contents",
            "bundle.insert",
            "bundle.insert_fail",
            "bundle.remove_one",
            "step_sand",
            "dash_ready",
            "pressure_plate.click_off",
            "pressure_plate.click_on",
            "button.click_off",
            "button.click_on",
            "door.open",
            "door.close",
            "trapdoor.open",
            "trapdoor.close",
            "fence_gate.open",
            "fence_gate.close",
            "insert",
            "pickup",
            "insert_enchanted",
            "pickup_enchanted",
            "shatter_pot",
            "break_pot",
            "brush",
            "brush_completed",
            "block.sign.waxed_interact_fail",
            "note.bass",
            "pumpkin.carve",
            "mob.husk.convert_to_zombie",
            "mob.pig.death",
            "mob.hoglin.converted_to_zombified",
            "ambient.underwater.enter",
            "ambient.underwater.exit",
            "bottle.fill",
            "bottle.empty",
            "block.decorated_pot.insert",
            "block.decorated_pot.insert_fail",
            "crafter.craft",
            "crafter.fail",
            "crafter.disable_slot",
            "block.copper_bulb.turn_on",
            "block.copper_bulb.turn_off",
            "breeze_wind_charge.burst",
            "imitate.breeze",
            "trial_spawner.open_shutter",
            "trial_spawner.detect_player",
            "trial_spawner.close_shutter",
            "trial_spawner.spawn_mob",
            "trial_spawner.eject_item",
            "trial_spawner.ambient",
            "mob.armadillo.brush",
            "mob.armadillo.scute_drop",
            "armor.equip_wolf",
            "armor.unequip_wolf",
            "reflect",
            "vault.open_shutter",
            "vault.close_shutter",
            "vault.eject_item",
            "vault.insert_item",
            "vault.insert_item_fail",
            "vault.ambient",
            "vault.activate",
            "vault.deactivate",
            "hurt.reduced",
            "wind_charge.burst",
            "armor.break_wolf",
            "armor.crack_wolf",
            "armor.repair_wolf",
            "mace.smash_air",
            "mace.smash_ground",
            "mace.heavy_smash_ground",
            "trial_spawner.charge_activate",
            "trial_spawner.ambient_ominous",
            "apply_effect.bad_omen",
            "apply_effect.raid_omen",
            "apply_effect.trial_omen",
            "ominous_item_spawner.spawn_item",
            "ominous_bottle.end_use",
            "ominous_item_spawner.spawn_item_begin",
            "ominous_item_spawner.about_to_spawn_item",
            "imitate.bogged",
            "vault.reject_rewarded_player",
            "imitate.drowned",
            "sponge.absorb",
            "imitate.creaking",
            "block.creaking_heart.trail",
            "creaking_heart_spawn",
            "activate",
            "deactivate",
            "freeze",
            "unfreeze",
            "open",
            "open_long",
            "close",
            "close_long",
            "imitate.phantom",
            "imitate.zoglin",
            "imitate.guardian",
            "imitate.ravager",
            "imitate.pillager",
            "place_in_water",
            "state_change",
            "imitate.happy_ghast",
            "armor.unequip_generic",
            "ambient.weather.the_end_light_flash",
            "lead.leash",
            "lead.unleash",
            "lead.break",
            "unsaddle",
            "armor.equip_copper",
            "place_item",
            "single_swap",
            "multi_swap",
            "undefined"
          ],
          "title": "LevelSoundEvent",
          "type": "string"
        },
        "speed_multiplier": {
          "description": "Modifies the entity's speed when charging toward the target. Default value: 1.",
          "type": "number"
        },
        "success_rate": {
          "description": "Percent chance this entity will start a charge attack, if not already attacking (1.0 = 100%). Default value: 0.1428.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.charge_attack",
      "type": "object"
    },
    "1492465940": {
      "description": "Allows this entity to use a flame-breath attack. Can only be used by the Ender Dragon.",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "cooldown_time": {
          "description": "Time (in seconds) between each start of the cycle to roar, then breath flame. Default value: 10.",
          "type": "number"
        },
        "flame_time": {
          "description": "Time (in seconds), after roar, to breath flame. Default value: 0.5.",
          "type": "number"
        },
        "ground_flame_count": {
          "description": "Number of ground flame-breath attacks to use before flight-takeoff. Default value: 4.",
          "type": "integer"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "roar_time": {
          "description": "Time (in seconds) to roar, before breathing flame. Default value: 2.",
          "type": "number"
        },
        "smoke_color": {
          "description": " Default value: #DC00EF.",
          "type": "string"
        },
        "smoke_radius": {
          "description": " Default value: 5.",
          "type": "number"
        },
        "smoke_time": {
          "description": " Default value: 10.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.dragonflaming",
      "type": "object"
    },
    "1531870811": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      ],
      "title": "Item Descriptor"
    },
    "1861715976": {
      "description": "A behavior that enables a mob to transport items from and to containers.",
      "properties": {
        "allow_simultaneous_interaction": {
          "description": "When true the mob will wait until a container is not used by other entities before starting to interact with it. Default value: false.",
          "type": "boolean"
        },
        "allowed_items": {
          "description": "A list of item descriptors that are the only items the mob is allowed to transport. If this and \"disallowed_items\" are both empty, then all items are allowed. If non-empty \"disallowed_items\" must be empty. Default value: empty.",
          "items": {
            "$ref": "#/definitions/1531870811"
          },
          "type": "array"
        },
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "destination_container_types": {
          "description": "A list of block descriptors that should be a container type to put items in. Default value: empty.",
          "items": {
            "$ref": "#/definitions/2794205495"
          },
          "type": "array"
        },
        "disallowed_items": {
          "description": "A list of item descriptors that are the mob is not allowed to transport. If non-empty \"allowed_items\" must be empty. Default value: emtpy.",
          "items": {
            "$ref": "#/definitions/1531870811"
          },
          "type": "array"
        },
        "idle_cooldown": {
          "description": "When the mob cannot find a container in which to get or put items, the goal will stop being active for this amount of time in seconds. Default value: 20.",
          "type": "integer"
        },
        "initial_cooldown": {
          "description": "How long the mob will wait after spawning or getting the goal added before the goal can start. Default value: 0.",
          "type": "integer"
        },
        "interaction_time": {
          "description": "The amount of time in seconds spent interacting with the containers. Default value: 3.",
          "minimum": 0,
          "type": "number"
        },
        "max_stack_size": {
          "description": "The maximum stack size that the mob will try to take from a container. Default value: 64.",
          "maximum": 64,
          "minimum": 1,
          "type": "integer"
        },
        "max_visited_containers": {
          "description": "The maximum number of containers that the mob will try to take/place items from before going on cooldown and starting over. Default value: 16.",
          "type": "integer"
        },
        "place_strategy": {
          "description": "The strategy to use for placing the transported item. Any - always place if there is room, With matching - place if there is a matching item in the container, With matching or empty - like With matching but will also place in empty containers Default value: any.",
          "enum": [
            "any",
            "with_matching",
            "with_matching_or_empty"
          ],
          "title": "place_strategy",
          "type": "string"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "search_distance": {
          "$ref": "#/definitions/4021724221",
          "description": "The maximum search distance horizontally and vertically at which to find containers for taking or placing items. Default value: Vec2(64,32)."
        },
        "search_strategy": {
          "description": "The strategy to use for finding source or destination containers. The nearest valid container or a random valid container in range. Default value: random.",
          "enum": [
            "nearest",
            "random"
          ],
          "title": "search_strategy",
          "type": "string"
        },
        "source_container_types": {
          "description": "A list of block descriptors that should be a container type to get items from. Default value: empty.",
          "items": {
            "$ref": "#/definitions/2794205495"
          },
          "type": "array"
        }
      },
      "title": "minecraft:behavior.transport_items",
      "type": "object"
    },
    "1926664697": {
      "description": "Allows the entity to be controlled by a player which is holding the item specified in \"minecraft:item_controllable\" component's \"control_items\" field (required). Also requires the \"minecraft:movement\" component, and the \"minecraft:rideable\" component. On every tick, the entity will attempt to rotate towards where the player is facing with the control item whilst simultaneously moving forward.",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "fractional_rotation": {
          "description": "The entity will attempt to rotate to face where the player is facing each tick. The entity will target this percentage of their difference in their current facing angles each tick (from 0.0 to 1.0 where 1.0 = 100%). This is limited by \"fractional_rotation_limit\". A value of 0.0 will result in the entity no longer turning to where the player is facing. Default value: 0.5.",
          "maximum": 1,
          "minimum": 0.5,
          "type": "number"
        },
        "fractional_rotation_limit": {
          "description": "Limits the total degrees the entity can rotate to face where the player is facing on each tick. Default value: 5.0.",
          "type": "number"
        },
        "mount_speed_multiplier": {
          "description": "Speed multiplier of mount when controlled by player. Default value: 1.0.",
          "type": "number"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "title": "minecraft:behavior.controlled_by_player",
      "type": "object"
    },
    "1949055570": {
      "description": "Allows this entity to detect the nearest player within \"sniffing_radius\" and update its \"minecraft:suspect_tracking\" component state",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "cooldown_range": {
          "$ref": "#/definitions/1057349585",
          "description": "Cooldown range between sniffs in seconds Default value: [3.0, 10.0]."
        },
        "duration": {
          "description": "Sniffing duration in seconds Default value: 1.",
          "type": "number"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "sniffing_radius": {
          "description": "Mob detection radius Default value: 5.",
          "type": "number"
        },
        "suspicion_radius_horizontal": {
          "description": "Mob suspicion horizontal radius. When a player is within this radius horizontally, the anger level towards that player is increased Default value: 3.",
          "type": "number"
        },
        "suspicion_radius_vertical": {
          "description": "Mob suspicion vertical radius. When a player is within this radius vertically, the anger level towards that player is increased Default value: 3.",
          "minimum": 1,
          "type": "number"
        }
      },
      "title": "minecraft:behavior.sniff",
      "type": "object"
    },
    "1979855054": {
      "description": "Allows an entity to attack using swoop attack behavior; Ideal for use with flying mobs. The behavior ends if the entity has a horizontal collision or gets hit.",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "damage_reach": {
          "description": "Added to the base size of the entity, to determine the target's maximum allowable distance, when trying to deal attack damage. Default value: 0.2.",
          "type": "number"
        },
        "delay_range": {
          "$ref": "#/definitions/1057349585",
          "description": "Minimum and maximum cooldown time-range (in seconds) between each attempted swoop attack. Default value: [10.0, 20.0]."
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "speed_multiplier": {
          "description": "During swoop attack behavior, this determines the multiplier the entity's speed is modified by when moving toward the target. Default value: 1.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.swoop_attack",
      "type": "object"
    },
    "2159667979": {
      "description": "Allows the entity to eat a specified Mob.",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "eat_animation_time": {
          "description": "Sets the time in seconds the eat animation should play for. Default value: 1.000000.",
          "type": "number"
        },
        "eat_mob_sound": {
          "description": "Sets the sound that should play when eating a mob.",
          "type": "string"
        },
        "loot_table": {
          "description": "The loot table for loot to be dropped when eating a mob.",
          "type": "string"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "pull_in_force": {
          "description": "Sets the force which the mob-to-be-eaten is pulled towards the eating mob. Default value: 1.000000.",
          "type": "number"
        },
        "reach_mob_distance": {
          "description": "Sets the desired distance to be reached before eating the mob. Default value: 1.000000.",
          "type": "number"
        },
        "run_speed": {
          "description": "Sets the entity's speed when running toward the target. Default value: 1.000000.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.eat_mob",
      "type": "object"
    },
    "2267778531": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "properties": {
            "expression": {
              "type": "string"
            },
            "version": {
              "type": "integer"
            }
          },
          "required": [
            "expression",
            "version"
          ],
          "type": "object"
        }
      ],
      "title": "Molang string"
    },
    "2291122496": {
      "description": "Allows the mob to try to move to air once it is close to running out of its total breathable supply. Requires \"minecraft:breathable\".",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "material_type": {
          "description": "The material the mob is traveling in. An air block will only be considered valid to move to with a block of this material below it. Options are: \"water\", \"lava\", or \"any\". Default value: water.",
          "type": "string"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "search_height": {
          "description": "The height (in blocks) above the mob's current position that it will search for a valid air block to move to. If a valid block cannot be found, the mob will move to the position this many blocks above it. Default value: 16.",
          "type": "integer"
        },
        "search_radius": {
          "description": "The radius (in blocks) around the mob's current position that it will search for a valid air block to move to. Default value: 4.",
          "type": "integer"
        },
        "speed_mod": {
          "description": "Movement speed multiplier of the mob when using this Goal. Default value: 1.4.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.swim_up_for_breath",
      "type": "object"
    },
    "2309924397": {
      "description": "Allows this entity to perform a 'sonic boom' ranged attack",
      "properties": {
        "attack_cooldown": {
          "description": "Cooldown in seconds required after using this attack until the entity can use sonic boom again. Default value: 5.",
          "type": "number"
        },
        "attack_damage": {
          "description": "Attack damage of the sonic boom. Default value: 30.",
          "type": "number"
        },
        "attack_range_horizontal": {
          "description": "Horizontal range (in blocks) at which the sonic boom can damage the target. Default value: 15.",
          "type": "number"
        },
        "attack_range_vertical": {
          "description": "Vertical range (in blocks) at which the sonic boom can damage the target. Default value: 20.",
          "type": "number"
        },
        "attack_sound": {
          "description": "Sound event for the attack.",
          "type": "string"
        },
        "charge_sound": {
          "description": "Sound event for the charge up.",
          "type": "string"
        },
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "duration": {
          "description": "Goal duration in seconds Default value: 0.",
          "minimum": 0,
          "type": "number"
        },
        "duration_until_attack_sound": {
          "description": "Duration in seconds until the attack sound is played. Default value: 1.7.",
          "type": "number"
        },
        "knockback_height_cap": {
          "description": "Height cap of the attack knockback's vertical delta. Default value: 0.",
          "type": "number"
        },
        "knockback_horizontal_strength": {
          "description": "Horizontal strength of the attack's knockback applied to the attack target. Default value: 0.",
          "type": "number"
        },
        "knockback_vertical_strength": {
          "description": "Vertical strength of the attack's knockback applied to the attack target. Default value: 0.",
          "type": "number"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "speed_multiplier": {
          "description": "This multiplier modifies the attacking entity's speed when moving toward the target. Default value: 1.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.sonic_boom",
      "type": "object"
    },
    "2567691908": {
      "description": "Allow slimes to float in water / lava. Can only be used by Slime and Magma Cubes.",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "jump_chance_percentage": {
          "description": "Percent chance a slime or magma cube has to jump while in water / lava. Default value: 0.8.",
          "type": "number"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "speed_multiplier": {
          "description": "Determines the multiplier the entity's speed is modified by when moving through water / lava. Default value: 1.2.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.slime_float",
      "type": "object"
    },
    "2628131938": {
      "description": "Allows the entity to continuously jump around like a slime.",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "speed_multiplier": {
          "description": "Determines the multiplier this entity's speed is modified by when jumping around. Default value: 1.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.slime_keep_on_jumping",
      "type": "object"
    },
    "2770948419": {
      "properties": {
        "name": {
          "type": "string"
        },
        "states": {
          "additionalProperties": {
            "$ref": "#/definitions/517105782"
          },
          "type": "object"
        },
        "tags": {
          "type": "string"
        }
      },
      "title": "BlockDescriptorProxy",
      "type": "object"
    },
    "2794205495": {
      "oneOf": [
        {
          "$ref": "#/definitions/2770948419"
        },
        {
          "minLength": 1,
          "type": "string"
        },
        {
          "$ref": "#/definitions/2770948419"
        }
      ],
      "title": "Block Descriptor"
    },
    "298010374": {
      "description": "The entity will attempt to toss the items from its inventory to a nearby recently played noteblock.",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "listen_time": {
          "description": "Sets the time an entity should stay near a noteblock after hearing it. Default value: 30.",
          "type": "integer"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "speed": {
          "description": "Sets the entity's speed when moving toward the block. Default value: 1.",
          "type": "number"
        },
        "start_distance": {
          "description": "Sets the distance the entity needs to be away from the block to attempt to start the goal. Default value: 10.",
          "type": "number"
        },
        "stop_distance": {
          "description": "Sets the distance from the block the entity will attempt to reach. Default value: 2.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.stay_near_noteblock",
      "type": "object"
    },
    "3178719147": {
      "oneOf": [
        {
          "$ref": "#/definitions/2267778531"
        },
        {
          "type": "number"
        }
      ],
      "title": "Molang expression"
    },
    "3273917994": {
      "description": "Allows the entity to move in random directions like a slime.",
      "properties": {
        "add_random_time_range": {
          "description": "Additional time (in whole seconds), chosen randomly in the range of [0, \"add_random_time_range\"], to add to \"min_change_direction_time\". Default value: 3.",
          "type": "integer"
        },
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "min_change_direction_time": {
          "description": "Constant minimum time (in seconds) to wait before choosing a new direction. Default value: 2.",
          "type": "number"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "turn_range": {
          "description": "Maximum rotation angle range (in degrees) when randomly choosing a new direction. Default value: 360.",
          "type": "integer"
        }
      },
      "title": "minecraft:behavior.slime_random_direction",
      "type": "object"
    },
    "3731384245": {
      "description": "Allows this mob to breed with other mobs.",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "speed_multiplier": {
          "description": "Movement speed multiplier applied to the mob when using this AI Goal. Default value: 1.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.breed",
      "type": "object"
    },
    "3786002008": {
      "description": "Allows the entity go idle, if swimming. Entity must be in water.",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "idle_time": {
          "description": "Amount of time (in seconds) to stay idle. Default value: 5.",
          "type": "number"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "success_rate": {
          "description": "Percent chance this entity will go idle, 1.0 = 100%. Default value: 0.1.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.swim_idle",
      "type": "object"
    },
    "3872898814": {
      "description": "Allows this entity to roar at another entity based on data in minecraft:anger_level. Once the anger threshold specified in minecraft:anger_level has been reached, this entity will roar for the specified amount of time, look at the other entity, apply anger boost towards it, and finally target it.",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "duration": {
          "description": "The amount of time to roar for. Default value: 0.",
          "minimum": 0,
          "type": "number"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "title": "minecraft:behavior.roar",
      "type": "object"
    },
    "4021724221": {
      "oneOf": [
        {
          "items": {
            "type": "number"
          },
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        {
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          },
          "type": "object"
        }
      ],
      "title": "Vec2"
    },
    "4231633335": {
      "description": "Causes an entity to circle around an anchor point placed near a point or target.",
      "properties": {
        "angle_change": {
          "description": "Number of degrees to change this entity's facing by, when the entity selects its next anchor point. Default value: 15.0.",
          "type": "number"
        },
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "goal_radius": {
          "description": "Maximum distance from the anchor-point in which this entity considers itself to have reached the anchor point. This is to prevent the entity from bouncing back and forth trying to reach a specific spot. Default value: 0.500000.",
          "type": "number"
        },
        "height_above_target_range": {
          "$ref": "#/definitions/1057349585",
          "description": "The number of blocks above the target that the next anchor point can be set. This value is used only when the entity is tracking a target. Default value: [0.0, 0.0]."
        },
        "height_adjustment_chance": {
          "description": "Percent chance to determine how often to increase or decrease the current height around the anchor point. 1 = 100%. \"height_change_chance\" is deprecated and has been replaced with \"height_adjustment_chance\". Default value: 0.003.",
          "type": "number"
        },
        "height_offset_range": {
          "$ref": "#/definitions/1057349585",
          "description": "Vertical distance from the anchor point this entity must stay within, upon a successful height adjustment. Default value: [0.0, 0.0]."
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "radius_adjustment_chance": {
          "description": "Percent chance to determine how often to increase the size of the current movement radius around the anchor point. 1 = 100%. \"radius_change_chance\" is deprecated and has been replaced with \"radius_adjustment_chance\". Default value: 0.0.",
          "type": "number"
        },
        "radius_change": {
          "description": "The number of blocks to increase the current movement radius by, upon successful \"radius_adjustment_chance\". If the current radius increases over the range maximum, the current radius will be set back to the range minimum and the entity will change between clockwise and counter-clockwise movement. Default value: 1.",
          "type": "number"
        },
        "radius_range": {
          "$ref": "#/definitions/1057349585",
          "description": "Horizontal distance from the anchor point this entity must stay within upon a successful radius adjustment. Default value: [5.0, 5.0]."
        },
        "speed_multiplier": {
          "description": "Multiplies the speed at which this entity travels to its next desired position. Default value: 1.0.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.circle_around_anchor",
      "type": "object"
    },
    "517105782": {
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "type": "string"
        },
        {
          "type": "boolean"
        }
      ],
      "title": "compound_proxy"
    },
    "597030358": {
      "description": "Causes the entity to grow tired every once in a while, while attacking.",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "grow_tired_cooldown_time": {
          "type": "number"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "set_persistent": {
          "description": "Allows the actor to be set to persist upon targeting a player Default value: false.",
          "type": "boolean"
        },
        "speed_multiplier": {
          "description": "During attack behavior, this multiplier modifies the entity's speed when moving toward the target. Default value: 1.",
          "type": "number"
        },
        "x_max_rotation": {
          "description": "Maximum rotation (in degrees), on the X-axis, this entity can rotate while trying to look at the target. Default value: 10.",
          "type": "number"
        },
        "y_max_rotation": {
          "description": "Maximum rotation (in degrees), on the Y-axis, this entity can rotate while trying to look at the target. Default value: 10.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.slime_attack",
      "type": "object"
    },
    "61802587": {
      "description": "Allows the entity to wander around while swimming, when not path-finding.",
      "properties": {
        "control_flags": {
          "items": {
            "enum": [
              "move",
              "look",
              "jump"
            ],
            "title": "Goal's control flags",
            "type": "string"
          },
          "type": "array"
        },
        "interval": {
          "description": "Percent chance to start wandering, when not path-finding. 1 = 100% Default value: 0.00833.",
          "type": "number"
        },
        "look_ahead": {
          "description": "Distance to look ahead for obstacle avoidance, while wandering. Default value: 5.",
          "type": "number"
        },
        "priority": {
          "minimum": 0,
          "type": "integer"
        },
        "speed_multiplier": {
          "description": "This multiplier modifies the entity's speed when wandering. Default value: 1.",
          "type": "number"
        },
        "wander_time": {
          "description": "Amount of time (in seconds) to wander after wandering behavior was successfully started. Default value: 5.",
          "type": "number"
        }
      },
      "title": "minecraft:behavior.swim_wander",
      "type": "object"
    },
    "957886722": {
      "properties": {
        "on_bred": {
          "$ref": "#/definitions/3178719147",
          "description": "A Molang expression defining the amount of experience rewarded when this entity is successfully bred."
        },
        "on_bred_array": {
          "deprecated": true,
          "items": {
            "$ref": "#/definitions/3178719147"
          },
          "type": "array"
        },
        "on_death": {
          "$ref": "#/definitions/3178719147",
          "description": "A Molang expression defining the amount of experience rewarded when this entity dies."
        },
        "on_death_array": {
          "deprecated": true,
          "items": {
            "$ref": "#/definitions/3178719147"
          },
          "type": "array"
        }
      },
      "title": "minecraft:experience_reward",
      "type": "object"
    }
  },
  "properties": {
    "minecraft:absorption": {
      "description": "Dynamic value"
    },
    "minecraft:addrider": {
      "description": "Dynamic value"
    },
    "minecraft:admire_item": {
      "description": "Dynamic value"
    },
    "minecraft:ageable": {
      "description": "Dynamic value"
    },
    "minecraft:ambient_sound_interval": {
      "description": "Dynamic value"
    },
    "minecraft:anger_level": {
      "description": "Dynamic value"
    },
    "minecraft:angry": {
      "description": "Dynamic value"
    },
    "minecraft:annotation.break_door": {
      "description": "Dynamic value"
    },
    "minecraft:annotation.open_door": {
      "description": "Dynamic value"
    },
    "minecraft:area_attack": {
      "description": "Dynamic value"
    },
    "minecraft:attack": {
      "description": "Dynamic value"
    },
    "minecraft:attack_cooldown": {
      "description": "Dynamic value"
    },
    "minecraft:attack_damage": {
      "description": "Dynamic value"
    },
    "minecraft:balloon": {
      "description": "Dynamic value"
    },
    "minecraft:balloonable": {
      "description": "Dynamic value"
    },
    "minecraft:barter": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.admire_item": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.avoid_block": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.avoid_mob_type": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.barter": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.beg": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.break_door": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.breed": {
      "$ref": "#/definitions/3731384245",
      "description": "Allows this mob to breed with other mobs."
    },
    "minecraft:behavior.celebrate": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.celebrate_survive": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.charge_attack": {
      "$ref": "#/definitions/1143284943",
      "description": "Allows this entity to damage a target by using a running attack."
    },
    "minecraft:behavior.charge_held_item": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.circle_around_anchor": {
      "$ref": "#/definitions/4231633335",
      "description": "Causes an entity to circle around an anchor point placed near a point or target."
    },
    "minecraft:behavior.controlled_by_player": {
      "$ref": "#/definitions/1926664697",
      "description": "Allows the entity to be controlled by a player which is holding the item specified in \"minecraft:item_controllable\" component's \"control_items\" field (required). Also requires the \"minecraft:movement\" component, and the \"minecraft:rideable\" component. On every tick, the entity will attempt to rotate towards where the player is facing with the control item whilst simultaneously moving forward."
    },
    "minecraft:behavior.croak": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.defend_trusted_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.defend_village_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.delayed_attack": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.dig": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.door_interact": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.dragonchargeplayer": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.dragondeath": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.dragonflaming": {
      "$ref": "#/definitions/1492465940",
      "description": "Allows this entity to use a flame-breath attack. Can only be used by the Ender Dragon."
    },
    "minecraft:behavior.dragonholdingpattern": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.dragonlanding": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.dragonscanning": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.dragonstrafeplayer": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.dragontakeoff": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.drink_milk": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.drink_potion": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.drop_item_for": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.eat_block": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.eat_carried_item": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.eat_mob": {
      "$ref": "#/definitions/2159667979",
      "description": "Allows the entity to eat a specified Mob."
    },
    "minecraft:behavior.emerge": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.enderman_leave_block": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.enderman_take_block": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.equip_item": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.explore_outskirts": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.fertilize_farm_block": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.find_cover": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.find_mount": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.find_underwater_treasure": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.fire_at_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.flee_sun": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.float": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.float_tempt": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.float_wander": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.follow_caravan": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.follow_mob": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.follow_owner": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.follow_parent": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.follow_target_captain": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.go_and_give_items_to_noteblock": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.go_and_give_items_to_owner": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.go_home": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.guardian_attack": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.harvest_farm_block": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.hide": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.hold_ground": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.hover": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.hurt_by_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.inspect_bookshelf": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.investigate_suspicious_location": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.jump_around_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.jump_to_block": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.knockback_roar": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.lay_down": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.lay_egg": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.leap_at_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.look_at_entity": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.look_at_player": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.look_at_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.look_at_trading_player": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.make_love": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.melee_attack": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.melee_box_attack": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.mingle": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.mount_pathing": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_around_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_indoors": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_outdoors": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_through_village": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_to_block": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_to_land": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_to_lava": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_to_liquid": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_to_poi": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_to_random_block": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_to_village": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_to_water": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_towards_dwelling_restriction": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_towards_home_restriction": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.move_towards_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.nap": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.nearest_attackable_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.nearest_prioritized_attackable_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.ocelot_sit_on_block": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.ocelotattack": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.offer_flower": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.open_door": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.owner_hurt_by_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.owner_hurt_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.panic": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.pet_sleep_with_owner": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.pickup_items": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.place_block": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.play": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.play_dead": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.player_ride_tamed": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.raid_garden": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.ram_attack": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.random_breach": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.random_fly": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.random_hover": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.random_look_around": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.random_look_around_and_sit": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.random_search_and_dig": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.random_sitting": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.random_stroll": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.random_swim": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.ranged_attack": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.receive_love": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.restrict_open_door": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.restrict_sun": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.rise_to_liquid_level": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.roar": {
      "$ref": "#/definitions/3872898814",
      "description": "Allows this entity to roar at another entity based on data in minecraft:anger_level. Once the anger threshold specified in minecraft:anger_level has been reached, this entity will roar for the specified amount of time, look at the other entity, apply anger boost towards it, and finally target it."
    },
    "minecraft:behavior.roll": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.run_around_like_crazy": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.scared": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.send_event": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.share_items": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.silverfish_merge_with_stone": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.silverfish_wake_up_friends": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.skeleton_horse_trap": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.sleep": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.slime_attack": {
      "$ref": "#/definitions/597030358",
      "description": "Causes the entity to grow tired every once in a while, while attacking."
    },
    "minecraft:behavior.slime_float": {
      "$ref": "#/definitions/2567691908",
      "description": "Allow slimes to float in water / lava. Can only be used by Slime and Magma Cubes."
    },
    "minecraft:behavior.slime_keep_on_jumping": {
      "$ref": "#/definitions/2628131938",
      "description": "Allows the entity to continuously jump around like a slime."
    },
    "minecraft:behavior.slime_random_direction": {
      "$ref": "#/definitions/3273917994",
      "description": "Allows the entity to move in random directions like a slime."
    },
    "minecraft:behavior.snacking": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.sneeze": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.sniff": {
      "$ref": "#/definitions/1949055570",
      "description": "Allows this entity to detect the nearest player within \"sniffing_radius\" and update its \"minecraft:suspect_tracking\" component state"
    },
    "minecraft:behavior.sonic_boom": {
      "$ref": "#/definitions/2309924397",
      "description": "Allows this entity to perform a 'sonic boom' ranged attack"
    },
    "minecraft:behavior.squid_dive": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.squid_flee": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.squid_idle": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.squid_move_away_from_ground": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.squid_out_of_water": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.stalk_and_pounce_on_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.stay_near_noteblock": {
      "$ref": "#/definitions/298010374",
      "description": "The entity will attempt to toss the items from its inventory to a nearby recently played noteblock."
    },
    "minecraft:behavior.stay_while_sitting": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.stomp_attack": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.stomp_turtle_egg": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.stroll_towards_village": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.summon_entity": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.swell": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.swim_idle": {
      "$ref": "#/definitions/3786002008",
      "description": "Allows the entity go idle, if swimming. Entity must be in water."
    },
    "minecraft:behavior.swim_up_for_breath": {
      "$ref": "#/definitions/2291122496",
      "description": "Allows the mob to try to move to air once it is close to running out of its total breathable supply. Requires \"minecraft:breathable\"."
    },
    "minecraft:behavior.swim_wander": {
      "$ref": "#/definitions/61802587",
      "description": "Allows the entity to wander around while swimming, when not path-finding."
    },
    "minecraft:behavior.swim_with_entity": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.swoop_attack": {
      "$ref": "#/definitions/1979855054",
      "description": "Allows an entity to attack using swoop attack behavior; Ideal for use with flying mobs. The behavior ends if the entity has a horizontal collision or gets hit."
    },
    "minecraft:behavior.take_block": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.take_flower": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.target_when_pushed": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.teleport_to_owner": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.tempt": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.timer_flag_1": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.timer_flag_2": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.timer_flag_3": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.trade_interest": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.trade_with_player": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.transport_items": {
      "$ref": "#/definitions/1861715976",
      "description": "A behavior that enables a mob to transport items from and to containers."
    },
    "minecraft:behavior.vex_copy_owner_target": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.vex_random_move": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.wither_random_attack_pos_goal": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.wither_target_highest_damage": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.work": {
      "description": "Dynamic value"
    },
    "minecraft:behavior.work_composter": {
      "description": "Dynamic value"
    },
    "minecraft:block_climber": {
      "description": "Dynamic value"
    },
    "minecraft:block_sensor": {
      "description": "Dynamic value"
    },
    "minecraft:body_rotation_always_follows_head": {
      "description": "Dynamic value"
    },
    "minecraft:body_rotation_blocked": {
      "description": "Dynamic value"
    },
    "minecraft:boostable": {
      "description": "Dynamic value"
    },
    "minecraft:boss": {
      "description": "Dynamic value"
    },
    "minecraft:break_blocks": {
      "description": "Dynamic value"
    },
    "minecraft:breathable": {
      "description": "Dynamic value"
    },
    "minecraft:breedable": {
      "description": "Dynamic value"
    },
    "minecraft:bribeable": {
      "description": "Dynamic value"
    },
    "minecraft:bucketable": {
      "description": "Dynamic value"
    },
    "minecraft:buoyant": {
      "description": "Dynamic value"
    },
    "minecraft:burns_in_daylight": {
      "description": "Dynamic value"
    },
    "minecraft:can_climb": {
      "description": "Dynamic value"
    },
    "minecraft:can_fly": {
      "description": "Dynamic value"
    },
    "minecraft:can_join_raid": {
      "description": "Dynamic value"
    },
    "minecraft:can_power_jump": {
      "description": "Dynamic value"
    },
    "minecraft:cannot_be_attacked": {
      "description": "Dynamic value"
    },
    "minecraft:celebrate_hunt": {
      "description": "Dynamic value"
    },
    "minecraft:collision_box": {
      "description": "Dynamic value"
    },
    "minecraft:color": {
      "description": "Dynamic value"
    },
    "minecraft:color2": {
      "description": "Dynamic value"
    },
    "minecraft:combat_regeneration": {
      "description": "Dynamic value"
    },
    "minecraft:conditional_bandwidth_optimization": {
      "description": "Dynamic value"
    },
    "minecraft:custom_hit_test": {
      "description": "Dynamic value"
    },
    "minecraft:damage_over_time": {
      "description": "Dynamic value"
    },
    "minecraft:damage_sensor": {
      "description": "Dynamic value"
    },
    "minecraft:dash_action": {
      "description": "Dynamic value"
    },
    "minecraft:default_look_angle": {
      "description": "Dynamic value"
    },
    "minecraft:despawn": {
      "description": "Dynamic value"
    },
    "minecraft:dimension_bound": {
      "description": "Dynamic value"
    },
    "minecraft:drying_out_timer": {
      "description": "Dynamic value"
    },
    "minecraft:dweller": {
      "description": "Dynamic value"
    },
    "minecraft:economy_trade_table": {
      "description": "Dynamic value"
    },
    "minecraft:entity_armor_equipment_slot_mapping": {
      "description": "Dynamic value"
    },
    "minecraft:entity_sensor": {
      "description": "Dynamic value"
    },
    "minecraft:environment_sensor": {
      "description": "Dynamic value"
    },
    "minecraft:equip_item": {
      "description": "Dynamic value"
    },
    "minecraft:equipment": {
      "description": "Dynamic value"
    },
    "minecraft:equippable": {
      "description": "Dynamic value"
    },
    "minecraft:exhaustion_values": {
      "description": "Dynamic value"
    },
    "minecraft:experience_reward": {
      "$ref": "#/definitions/957886722"
    },
    "minecraft:explode": {
      "description": "Dynamic value"
    },
    "minecraft:fire_immune": {
      "description": "Dynamic value"
    },
    "minecraft:floats_in_liquid": {
      "description": "Dynamic value"
    },
    "minecraft:flocking": {
      "description": "Dynamic value"
    },
    "minecraft:flying_speed": {
      "description": "Dynamic value"
    },
    "minecraft:follow_range": {
      "description": "Dynamic value"
    },
    "minecraft:free_camera_controlled": {
      "description": "Dynamic value"
    },
    "minecraft:friction_modifier": {
      "description": "Dynamic value"
    },
    "minecraft:game_event_movement_tracking": {
      "description": "Dynamic value"
    },
    "minecraft:genetics": {
      "description": "Dynamic value"
    },
    "minecraft:giveable": {
      "description": "Dynamic value"
    },
    "minecraft:ground_offset": {
      "description": "Dynamic value"
    },
    "minecraft:group_size": {
      "description": "Dynamic value"
    },
    "minecraft:grows_crop": {
      "description": "Dynamic value"
    },
    "minecraft:healable": {
      "description": "Dynamic value"
    },
    "minecraft:health": {
      "description": "Dynamic value"
    },
    "minecraft:heartbeat": {
      "description": "Dynamic value"
    },
    "minecraft:hide": {
      "description": "Dynamic value"
    },
    "minecraft:home": {
      "description": "Dynamic value"
    },
    "minecraft:horse.jump_strength": {
      "description": "Dynamic value"
    },
    "minecraft:hurt_on_condition": {
      "description": "Dynamic value"
    },
    "minecraft:ignore_cannot_be_attacked": {
      "description": "Dynamic value"
    },
    "minecraft:input_ground_controlled": {
      "description": "Dynamic value"
    },
    "minecraft:inside_block_notifier": {
      "description": "Dynamic value"
    },
    "minecraft:insomnia": {
      "description": "Dynamic value"
    },
    "minecraft:instant_despawn": {
      "description": "Dynamic value"
    },
    "minecraft:interact": {
      "description": "Dynamic value"
    },
    "minecraft:inventory": {
      "description": "Dynamic value"
    },
    "minecraft:is_baby": {
      "description": "Dynamic value"
    },
    "minecraft:is_charged": {
      "description": "Dynamic value"
    },
    "minecraft:is_chested": {
      "description": "Dynamic value"
    },
    "minecraft:is_collidable": {
      "description": "Dynamic value"
    },
    "minecraft:is_dyeable": {
      "description": "Dynamic value"
    },
    "minecraft:is_hidden_when_invisible": {
      "description": "Dynamic value"
    },
    "minecraft:is_ignited": {
      "description": "Dynamic value"
    },
    "minecraft:is_illager_captain": {
      "description": "Dynamic value"
    },
    "minecraft:is_pregnant": {
      "description": "Dynamic value"
    },
    "minecraft:is_saddled": {
      "description": "Dynamic value"
    },
    "minecraft:is_shaking": {
      "description": "Dynamic value"
    },
    "minecraft:is_sheared": {
      "description": "Dynamic value"
    },
    "minecraft:is_stackable": {
      "description": "Dynamic value"
    },
    "minecraft:is_stunned": {
      "description": "Dynamic value"
    },
    "minecraft:is_tamed": {
      "description": "Dynamic value"
    },
    "minecraft:item_controllable": {
      "description": "Dynamic value"
    },
    "minecraft:item_hopper": {
      "description": "Dynamic value"
    },
    "minecraft:jump.dynamic": {
      "description": "Dynamic value"
    },
    "minecraft:jump.static": {
      "description": "Dynamic value"
    },
    "minecraft:knockback_resistance": {
      "description": "Dynamic value"
    },
    "minecraft:lava_movement": {
      "description": "Dynamic value"
    },
    "minecraft:leashable": {
      "description": "Dynamic value"
    },
    "minecraft:leashable_to": {
      "description": "Dynamic value"
    },
    "minecraft:looked_at": {
      "description": "Dynamic value"
    },
    "minecraft:loot": {
      "description": "Dynamic value"
    },
    "minecraft:luck": {
      "description": "Dynamic value"
    },
    "minecraft:managed_wandering_trader": {
      "description": "Dynamic value"
    },
    "minecraft:mark_variant": {
      "description": "Dynamic value"
    },
    "minecraft:mob_effect": {
      "description": "Dynamic value"
    },
    "minecraft:mob_effect_immunity": {
      "description": "Dynamic value"
    },
    "minecraft:movement": {
      "description": "Dynamic value"
    },
    "minecraft:movement.amphibious": {
      "description": "Dynamic value"
    },
    "minecraft:movement.basic": {
      "description": "Dynamic value"
    },
    "minecraft:movement.dolphin": {
      "description": "Dynamic value"
    },
    "minecraft:movement.fly": {
      "description": "Dynamic value"
    },
    "minecraft:movement.generic": {
      "description": "Dynamic value"
    },
    "minecraft:movement.glide": {
      "description": "Dynamic value"
    },
    "minecraft:movement.hover": {
      "description": "Dynamic value"
    },
    "minecraft:movement.jump": {
      "description": "Dynamic value"
    },
    "minecraft:movement.skip": {
      "description": "Dynamic value"
    },
    "minecraft:movement.sway": {
      "description": "Dynamic value"
    },
    "minecraft:movement_sound_distance_offset": {
      "description": "Dynamic value"
    },
    "minecraft:nameable": {
      "description": "Dynamic value"
    },
    "minecraft:navigation.climb": {
      "description": "Dynamic value"
    },
    "minecraft:navigation.float": {
      "description": "Dynamic value"
    },
    "minecraft:navigation.fly": {
      "description": "Dynamic value"
    },
    "minecraft:navigation.generic": {
      "description": "Dynamic value"
    },
    "minecraft:navigation.hover": {
      "description": "Dynamic value"
    },
    "minecraft:navigation.swim": {
      "description": "Dynamic value"
    },
    "minecraft:navigation.walk": {
      "description": "Dynamic value"
    },
    "minecraft:npc": {
      "description": "Dynamic value"
    },
    "minecraft:on_death": {
      "description": "Dynamic value"
    },
    "minecraft:on_friendly_anger": {
      "description": "Dynamic value"
    },
    "minecraft:on_hurt": {
      "description": "Dynamic value"
    },
    "minecraft:on_hurt_by_player": {
      "description": "Dynamic value"
    },
    "minecraft:on_ignite": {
      "description": "Dynamic value"
    },
    "minecraft:on_start_landing": {
      "description": "Dynamic value"
    },
    "minecraft:on_start_takeoff": {
      "description": "Dynamic value"
    },
    "minecraft:on_target_acquired": {
      "description": "Dynamic value"
    },
    "minecraft:on_target_escape": {
      "description": "Dynamic value"
    },
    "minecraft:on_wake_with_owner": {
      "description": "Dynamic value"
    },
    "minecraft:out_of_control": {
      "description": "Dynamic value"
    },
    "minecraft:peek": {
      "description": "Dynamic value"
    },
    "minecraft:persistent": {
      "description": "Dynamic value"
    },
    "minecraft:physics": {
      "description": "Dynamic value"
    },
    "minecraft:player.exhaustion": {
      "description": "Dynamic value"
    },
    "minecraft:player.experience": {
      "description": "Dynamic value"
    },
    "minecraft:player.hunger": {
      "description": "Dynamic value"
    },
    "minecraft:player.level": {
      "description": "Dynamic value"
    },
    "minecraft:player.saturation": {
      "description": "Dynamic value"
    },
    "minecraft:preferred_path": {
      "description": "Dynamic value"
    },
    "minecraft:projectile": {
      "description": "Dynamic value"
    },
    "minecraft:push_through": {
      "description": "Dynamic value"
    },
    "minecraft:pushable": {
      "description": "Dynamic value"
    },
    "minecraft:raid_trigger": {
      "description": "Dynamic value"
    },
    "minecraft:rail_movement": {
      "description": "Dynamic value"
    },
    "minecraft:rail_sensor": {
      "description": "Dynamic value"
    },
    "minecraft:ravager_blocked": {
      "description": "Dynamic value"
    },
    "minecraft:reflect_projectiles": {
      "description": "Dynamic value"
    },
    "minecraft:renders_when_invisible": {
      "description": "Dynamic value"
    },
    "minecraft:rideable": {
      "description": "Dynamic value"
    },
    "minecraft:rotation_axis_aligned": {
      "description": "Dynamic value"
    },
    "minecraft:scale": {
      "description": "Dynamic value"
    },
    "minecraft:scale_by_age": {
      "description": "Dynamic value"
    },
    "minecraft:scheduler": {
      "description": "Dynamic value"
    },
    "minecraft:shareables": {
      "description": "Dynamic value"
    },
    "minecraft:shooter": {
      "description": "Dynamic value"
    },
    "minecraft:sittable": {
      "description": "Dynamic value"
    },
    "minecraft:skin_id": {
      "description": "Dynamic value"
    },
    "minecraft:sound_volume": {
      "description": "Dynamic value"
    },
    "minecraft:spawn_entity": {
      "description": "Dynamic value"
    },
    "minecraft:spell_effects": {
      "description": "Dynamic value"
    },
    "minecraft:strength": {
      "description": "Dynamic value"
    },
    "minecraft:suspect_tracking": {
      "description": "Dynamic value"
    },
    "minecraft:tameable": {
      "description": "Dynamic value"
    },
    "minecraft:tamemount": {
      "description": "Dynamic value"
    },
    "minecraft:target_nearby_sensor": {
      "description": "Dynamic value"
    },
    "minecraft:teleport": {
      "description": "Dynamic value"
    },
    "minecraft:tick_world": {
      "$ref": "#/definitions/1057040869",
      "description": "Defines if the entity ticks the world and the radius around it to tick."
    },
    "minecraft:timer": {
      "description": "Dynamic value"
    },
    "minecraft:trade_resupply": {
      "description": "Dynamic value"
    },
    "minecraft:trade_table": {
      "description": "Dynamic value"
    },
    "minecraft:trail": {
      "description": "Dynamic value"
    },
    "minecraft:transformation": {
      "description": "Dynamic value"
    },
    "minecraft:transient": {
      "description": "Dynamic value"
    },
    "minecraft:trust": {
      "description": "Dynamic value"
    },
    "minecraft:trusting": {
      "description": "Dynamic value"
    },
    "minecraft:type_family": {
      "description": "Dynamic value"
    },
    "minecraft:underwater_movement": {
      "description": "Dynamic value"
    },
    "minecraft:variable_max_auto_step": {
      "description": "Dynamic value"
    },
    "minecraft:variant": {
      "description": "Dynamic value"
    },
    "minecraft:vertical_movement_action": {
      "description": "Dynamic value"
    },
    "minecraft:vibration_damper": {
      "description": "Dynamic value"
    },
    "minecraft:vibration_listener": {
      "description": "Dynamic value"
    },
    "minecraft:walk_animation_speed": {
      "description": "Dynamic value"
    },
    "minecraft:wants_jockey": {
      "description": "Dynamic value"
    },
    "minecraft:water_movement": {
      "description": "Dynamic value"
    },
    "minecraft:wither_target_highest_damage": {
      "description": "Dynamic value"
    }
  },
  "title": "Entity component definitions",
  "type": "object",
  "x-format-version": "1.21.110"
}