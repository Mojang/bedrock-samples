{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "1785036358",
    "x-format-version": "1.21.50",
    "x-minecraft-version": "1.21.90-beta.1",
    "definitions": {
        "1945762166": {
            "title": "struct SharedTypes::Legacy::Spawn::SpawnInLava"
        },
        "2617991491": {
            "title": "struct SharedTypes::Legacy::Spawn::SpawnAboveBlockFilter",
            "type": "object",
            "properties": {
                "blocks": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/2794205495"
                            }
                        },
                        {
                            "$ref": "#/definitions/2794205495"
                        }
                    ]
                },
                "distance": {
                    "type": "integer"
                }
            }
        },
        "1215845429": {
            "title": "struct SharedTypes::Legacy::Spawn::SpawnOnSurface"
        },
        "904344786": {
            "title": "struct SharedTypes::Legacy::Spawn::BiomeConditions",
            "type": "object",
            "properties": {
                "minecraft:biome_filter": {
                    "description": "Filters allow data objects to specify test criteria which allows their use. Filters can be defined by a single object of type (Filter Test), an array of tests, collection groups, or a combination of these objects.",
                    "$ref": "#/definitions/1088251937"
                },
                "minecraft:brightness_filter": {
                    "$ref": "#/definitions/2826784789"
                },
                "minecraft:delay_filter": {
                    "$ref": "#/definitions/584090557"
                },
                "minecraft:density_limit": {
                    "$ref": "#/definitions/3571280975"
                },
                "minecraft:difficulty_filter": {
                    "$ref": "#/definitions/2018407047"
                },
                "minecraft:disallow_spawns_in_bubble": {
                    "$ref": "#/definitions/1774774273"
                },
                "minecraft:distance_filter": {
                    "$ref": "#/definitions/2164548425"
                },
                "minecraft:height_filter": {
                    "$ref": "#/definitions/581732209"
                },
                "minecraft:herd": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/1551459349"
                            }
                        },
                        {
                            "$ref": "#/definitions/1551459349"
                        }
                    ]
                },
                "minecraft:is_experimental": {
                    "$ref": "#/definitions/2614685946"
                },
                "minecraft:is_persistent": {
                    "$ref": "#/definitions/1142137845"
                },
                "minecraft:mob_event_filter": {
                    "$ref": "#/definitions/1159543840"
                },
                "minecraft:permute_type": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/2437706690"
                            }
                        },
                        {
                            "$ref": "#/definitions/2437706690"
                        }
                    ]
                },
                "minecraft:player_in_village_filter": {
                    "$ref": "#/definitions/1491617288"
                },
                "minecraft:spawn_event": {
                    "$ref": "#/definitions/1159543840"
                },
                "minecraft:spawns_above_block_filter": {
                    "$ref": "#/definitions/2617991491"
                },
                "minecraft:spawns_lava": {
                    "$ref": "#/definitions/1945762166"
                },
                "minecraft:spawns_on_block_filter": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/2794205495"
                            }
                        },
                        {
                            "$ref": "#/definitions/2794205495"
                        }
                    ]
                },
                "minecraft:spawns_on_block_prevented_filter": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/2794205495"
                            }
                        },
                        {
                            "$ref": "#/definitions/2794205495"
                        }
                    ]
                },
                "minecraft:spawns_on_surface": {
                    "$ref": "#/definitions/1215845429"
                },
                "minecraft:spawns_underground": {
                    "$ref": "#/definitions/1900867328"
                },
                "minecraft:spawns_underwater": {
                    "$ref": "#/definitions/1503426398"
                },
                "minecraft:weight": {
                    "$ref": "#/definitions/517650772"
                },
                "minecraft:world_age_filter": {
                    "$ref": "#/definitions/921020165"
                }
            }
        },
        "1088251937": {
            "title": "Filter Group",
            "description": "Filters allow data objects to specify test criteria which allows their use. Filters can be defined by a single object of type (Filter Test), an array of tests, collection groups, or a combination of these objects.",
            "oneOf": [
                {
                    "$ref": "#/definitions/4150989894"
                },
                {
                    "type": "array",
                    "items": {
                        "description": "Filters allow data objects to specify test criteria which allows their use. Filters can be defined by a single object of type (Filter Test), an array of tests, collection groups, or a combination of these objects.",
                        "$ref": "#/definitions/1088251937"
                    }
                },
                {
                    "type": "object",
                    "properties": {
                        "AND": {
                            "description": "Evaluates all tests in the group, all must pass in order for the group to pass.",
                            "$ref": "#/definitions/1088251937"
                        },
                        "NOT": {
                            "description": "Evaluates all tests in the group, all must fail in order for the group to pass.",
                            "$ref": "#/definitions/1088251937"
                        },
                        "OR": {
                            "description": "Evaluates tests in the group, one or more must pass in order for the group to pass.",
                            "$ref": "#/definitions/1088251937"
                        },
                        "all": {
                            "description": "Evaluates all tests in the group, all must pass in order for the group to pass.",
                            "$ref": "#/definitions/1088251937"
                        },
                        "all_of": {
                            "description": "Evaluates all tests in the group, all must pass in order for the group to pass.",
                            "$ref": "#/definitions/1088251937"
                        },
                        "any": {
                            "description": "Evaluates tests in the group, one or more must pass in order for the group to pass.",
                            "$ref": "#/definitions/1088251937"
                        },
                        "any_of": {
                            "description": "Evaluates tests in the group, one or more must pass in order for the group to pass.",
                            "$ref": "#/definitions/1088251937"
                        },
                        "none_of": {
                            "description": "Evaluates all tests in the group, all must fail in order for the group to pass.",
                            "$ref": "#/definitions/1088251937"
                        }
                    }
                }
            ]
        },
        "4150989894": {
            "title": "Filter Test",
            "type": "object",
            "properties": {
                "domain": {
                    "description": "The domain the test should be performed in.",
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "operator": {
                    "description": "The comparison to apply with 'value'.",
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "subject": {
                    "description": "The subject of this filter test.",
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "test": {
                    "description": "The name of the test to apply.",
                    "type": "string"
                },
                "value": {
                    "description": "The value being compared with the test.",
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "type": "string"
                        }
                    ]
                }
            },
            "required": [
                "test"
            ]
        },
        "2794205495": {
            "title": "struct SharedTypes::Legacy::BlockDescriptor",
            "oneOf": [
                {
                    "$ref": "#/definitions/2770948419"
                },
                {
                    "type": "string",
                    "minLength": 1
                },
                {
                    "$ref": "#/definitions/2770948419"
                }
            ]
        },
        "2164548425": {
            "title": "struct SharedTypes::Legacy::Spawn::DistanceFilter",
            "type": "object",
            "properties": {
                "max": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                }
            }
        },
        "2826784789": {
            "title": "struct SharedTypes::Legacy::Spawn::BrightnessFilter",
            "type": "object",
            "properties": {
                "adjust_for_weather": {
                    "type": "boolean"
                },
                "max": {
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 15.0
                },
                "min": {
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 15.0
                }
            }
        },
        "584090557": {
            "title": "struct SharedTypes::Legacy::Spawn::DelayFilter",
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "max": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                },
                "spawn_chance": {
                    "type": "integer"
                }
            }
        },
        "2770948419": {
            "title": "struct SharedTypes::Legacy::BlockDescriptorSerializer::BlockDescriptorProxy",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "states": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/517105782"
                    }
                },
                "tags": {
                    "type": "string"
                }
            }
        },
        "517105782": {
            "title": "compound_proxy",
            "oneOf": [
                {
                    "type": "integer"
                },
                {
                    "type": "string"
                },
                {
                    "type": "boolean"
                }
            ]
        },
        "2018407047": {
            "title": "struct SharedTypes::Legacy::Spawn::DifficultyFilter",
            "type": "object",
            "properties": {
                "max": {
                    "title": "enum SharedTypes::Legacy::Spawn::Difficulty",
                    "type": "string",
                    "enum": [
                        "peaceful",
                        "easy",
                        "normal",
                        "hard"
                    ]
                },
                "min": {
                    "title": "enum SharedTypes::Legacy::Spawn::Difficulty",
                    "type": "string",
                    "enum": [
                        "peaceful",
                        "easy",
                        "normal",
                        "hard"
                    ]
                }
            }
        },
        "3571280975": {
            "title": "struct SharedTypes::Legacy::Spawn::DensityLimit",
            "type": "object",
            "properties": {
                "surface": {
                    "type": "integer",
                    "minimum": -1.0
                },
                "underground": {
                    "type": "integer",
                    "minimum": -1.0
                }
            }
        },
        "1774774273": {
            "title": "struct SharedTypes::Legacy::Spawn::DisallowSpawnInBubble"
        },
        "581732209": {
            "title": "struct SharedTypes::Legacy::Spawn::HeightFilter",
            "type": "object",
            "properties": {
                "max": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                }
            }
        },
        "1551459349": {
            "title": "struct SharedTypes::Legacy::Spawn::Herd",
            "type": "object",
            "properties": {
                "event": {
                    "description": "An event to run after M number of the herd have spawned",
                    "type": "string"
                },
                "event_skip_count": {
                    "description": "Number of the herd to skip before running the event",
                    "type": "integer"
                },
                "initial_event": {
                    "description": "Event run for the first N of the herd are placed.",
                    "type": "string"
                },
                "initial_event_count": {
                    "description": "Number of times that the initial event will run",
                    "type": "integer"
                },
                "max_size": {
                    "description": "Maximum number in this group to attempt to spawn",
                    "type": "integer",
                    "minimum": 0.0
                },
                "min_size": {
                    "description": "Minimum number in this group to attempt to spawn",
                    "type": "integer",
                    "minimum": 0.0
                }
            }
        },
        "2614685946": {
            "title": "struct SharedTypes::Legacy::Spawn::IsExperimental"
        },
        "1142137845": {
            "title": "struct SharedTypes::Legacy::Spawn::IsPersistant"
        },
        "517650772": {
            "title": "struct SharedTypes::Legacy::Spawn::Weight",
            "type": "object",
            "properties": {
                "default": {
                    "type": "integer",
                    "minimum": 0.0
                },
                "rarity": {
                    "type": "integer",
                    "minimum": 0.0
                }
            },
            "required": [
                "default"
            ]
        },
        "2437706690": {
            "title": "struct SharedTypes::Legacy::Spawn::PermuteType",
            "type": "object",
            "properties": {
                "entity_type": {
                    "description": "Permutation to spawn when selected",
                    "type": "string"
                },
                "min_guaranteed": {
                    "description": "The minimum number of this permutation to spawn",
                    "type": "integer",
                    "minimum": 0.0
                },
                "weight": {
                    "description": "The ratio of all of the entities that are in the permutation",
                    "type": "integer",
                    "minimum": 0.0
                }
            },
            "required": [
                "weight"
            ]
        },
        "1159543840": {
            "title": "struct SharedTypes::Legacy::Spawn::MobEventFilter",
            "type": "object",
            "properties": {
                "event": {
                    "type": "string"
                }
            }
        },
        "1491617288": {
            "title": "struct SharedTypes::Legacy::Spawn::PlayerInVillageFilter",
            "type": "object",
            "properties": {
                "distance": {
                    "type": "integer"
                },
                "village_border_tolerance": {
                    "type": "integer"
                }
            },
            "required": [
                "distance"
            ]
        },
        "1900867328": {
            "title": "struct SharedTypes::Legacy::Spawn::SpawnUnderground"
        },
        "1503426398": {
            "title": "struct SharedTypes::Legacy::Spawn::SpawnUnderwater"
        },
        "921020165": {
            "title": "struct SharedTypes::Legacy::Spawn::WorldAgeFilter",
            "type": "object",
            "properties": {
                "max": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                }
            }
        },
        "1253883150": {
            "title": "struct SharedTypes::Legacy::Spawn::Description",
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "population_control": {
                    "type": "string"
                }
            },
            "required": [
                "identifier"
            ]
        }
    },
    "title": "struct SharedTypes::Legacy::Spawn::Contents",
    "type": "object",
    "properties": {
        "conditions": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/904344786"
            }
        },
        "description": {
            "$ref": "#/definitions/1253883150"
        }
    },
    "required": [
        "description"
    ]
}