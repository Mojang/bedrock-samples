{
  "$id": "455162569",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "1095951327": {
      "description": "The enchantable component specifies what enchantments can be applied to the item. Not all enchantments will have an effect on all item components.",
      "properties": {
        "slot": {
          "description": "Specifies which types of enchantments can be applied. For example, `bow` would allow this item to be enchanted as if it were a bow.",
          "pattern": "none|all|g_armor|armor_head|armor_torso|armor_feet|armor_legs|sword|bow|spear|crossbow|g_tool|hoe|shears|flintsteel|shield|g_digging|axe|pickaxe|shovel|fishing_rod|carrot_stick|elytra|cosmetic_head",
          "type": "string"
        },
        "value": {
          "description": "Specifies the value of the enchantment (minimum of 0).",
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "slot",
        "value"
      ],
      "title": "minecraft:enchantable",
      "type": "object"
    },
    "1206516236": {
      "description": "The glint component determines whether the item has the enchanted glint render effect on it.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "properties": {
            "value": {
              "description": "Determines whether the item has the glint effect.",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:glint"
    },
    "1326498368": {
      "description": "Determines whether the item is immune to burning when dropped in fire or lava.",
      "properties": {
        "value": {
          "description": "Determines whether the item is immune to burning when dropped in fire or lava. Default value: true.",
          "type": "boolean"
        }
      },
      "title": "minecraft:fire_resistant",
      "type": "object"
    },
    "1372809227": {
      "description": "Icon item component determines which icon graphic will be used to represent the item in the UI and elsewhere.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "properties": {
            "textures": {
              "additionalProperties": {
                "$ref": "#/definitions/3504177219"
              },
              "description": "This map contains the different textures that can be used for the item's icon. Default will contain the actual icon texture. Armor trim textures and palettes and bundle open textures can be specified here too. The icon textures are the keys from the resource_pack/textures/item_texture.json 'texture_data' object associated with the texture file.",
              "type": "object"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:icon v1.21.80"
    },
    "1398826300": {
      "properties": {
        "max": {
          "type": "integer"
        },
        "min": {
          "type": "integer"
        }
      },
      "title": "IntRange",
      "type": "object"
    },
    "1493335182": {
      "title": "Reference",
      "type": "string"
    },
    "1527037515": {
      "title": "Reference",
      "type": "string"
    },
    "1531870811": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      ],
      "title": "Item Descriptor"
    },
    "1658474219": {
      "description": "The repairable item component specifies which items can be used to repair this item, along with how much durability is gained.",
      "properties": {
        "repair_items": {
          "description": "List of repair item entries. Each entry needs to define a list of strings for `items` that can be used for the repair and an optional `repair_amount` for how much durability is gained.",
          "items": {
            "$ref": "#/definitions/3256164975"
          },
          "type": "array"
        }
      },
      "title": "minecraft:repairable",
      "type": "object"
    },
    "1661309668": {
      "description": "The hover_text_color component specifies the color of the item name when the players hovers the cursor over the item.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "properties": {
            "value": {
              "description": "Specifies the color of the item's hover text.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:hover_text_color"
    },
    "1754804474": {
      "description": "This component is a boolean or string that determines if the interact button is shown in touch controls and what text is displayed on the button. When set as true, default \"Use Item\" text will be displayed.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string"
        }
      ],
      "title": "minecraft:interact_button"
    },
    "1873913113": {
      "description": "[EXPERIMENTAL] Storage Items can be used by other components to store other items within this item.",
      "properties": {
        "allow_nested_storage_items": {
          "description": "Determines whether another Storage Item is allowed inside of this item. Default is true.",
          "type": "boolean"
        },
        "allowed_items": {
          "description": "List of items that are exclusively allowed in this Storage Item. If empty all items are allowed.",
          "items": {
            "$ref": "#/definitions/1531870811"
          },
          "type": "array"
        },
        "banned_items": {
          "description": "List of items that are not allowed in this Storage Item.",
          "items": {
            "$ref": "#/definitions/1531870811"
          },
          "type": "array"
        },
        "max_slots": {
          "description": "The maximum allowed weight of the sum of all contained items. Maximum is 64. Default is 64.",
          "maximum": 64,
          "type": "integer"
        }
      },
      "title": "minecraft:storage_item",
      "type": "object"
    },
    "1889822164": {
      "description": "The hand_equipped component determines if an item is rendered like a tool while it is in a player's hand.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "properties": {
            "value": {
              "description": "Determines whether the item is rendered like a tool while in the player's hand.",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:hand_equipped"
    },
    "1899103179": {
      "properties": {
        "block": {
          "$ref": "#/definitions/2794205495",
          "description": "Block to be dug."
        },
        "speed": {
          "description": "Digging speed for the correlating block(s).",
          "type": "integer"
        }
      },
      "required": [
        "block",
        "speed"
      ],
      "title": "BlockInfo",
      "type": "object"
    },
    "1956551060": {
      "description": "Enables an item to emit effects when it receives damage. Because of this, the item also needs a `minecraft:durability` component.",
      "properties": {
        "durability_thresholds": {
          "description": "The list of both durability thresholds and effects emitted when each threshold is met. When multiple thresholds are met, only the threshold with the lowest durability after applying the damage is considered.",
          "items": {
            "$ref": "#/definitions/764203503",
            "description": "Defines both the durability threshold, and the effects emitted when that threshold is met."
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "durability_thresholds"
      ],
      "title": "minecraft:durability_sensor",
      "type": "object"
    },
    "2063418195": {
      "description": "It allows an item to absorb damage that would otherwise be dealt to its wearer. For this to happen, the item needs to be equipped in an armor slot. The absorbed damage reduces the item's durability, with any excess damage being ignored. Because of this, the item also needs a `minecraft:durability` component.",
      "properties": {
        "absorbable_causes": {
          "description": "List of damage causes that can be absorbed by the item. By default, no damage cause is absorbed.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "absorbable_causes"
      ],
      "title": "minecraft:damage_absorption",
      "type": "object"
    },
    "2267778531": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "properties": {
            "expression": {
              "type": "string"
            },
            "version": {
              "type": "integer"
            }
          },
          "required": [
            "expression",
            "version"
          ],
          "type": "object"
        }
      ],
      "title": "Molang string"
    },
    "2333685719": {
      "description": "[EXPERIMENTAL] Adds bundle-specific interactions and tooltip to the item. Requires a \"minecraft:storage_item\" component.",
      "properties": {
        "num_viewable_slots": {
          "description": "The maximum number of slots in the bundle viewable by the plater. Can be from 1 to 64. Default is 12.",
          "maximum": 64,
          "minimum": 1,
          "type": "integer"
        }
      },
      "title": "minecraft:bundle_interaction",
      "type": "object"
    },
    "2359991381": {
      "description": "The liquid_clipped component determines whether the item interacts with liquid blocks on use.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "properties": {
            "value": {
              "description": "Deterines whether the item interacts with liquid blocks on use.",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:liquid_clipped"
    },
    "2418450159": {
      "description": "Contains the required identifier for the item. May contain optional fields like menu_category.",
      "properties": {
        "identifier": {
          "$ref": "#/definitions/3681664844",
          "description": "Unique name for the item that must include a namespace and must not use the Minecraft namespace unless overriding a Vanilla item."
        },
        "menu_category": {
          "$ref": "#/definitions/4121537914",
          "description": "menu_category contains the creative group name and category for this item."
        }
      },
      "required": [
        "identifier"
      ],
      "title": "description",
      "type": "object"
    },
    "2499855414": {
      "description": "Digger item component specifies how quickly this item can dig specific blocks.",
      "properties": {
        "destroy_speeds": {
          "description": "A list of blocks to dig with correlating speeds of digging.",
          "items": {
            "$ref": "#/definitions/1899103179"
          },
          "type": "array"
        },
        "use_efficiency": {
          "description": "Determines whether this item should be impacted if the efficiency enchantment is applied to it.",
          "type": "boolean"
        }
      },
      "title": "minecraft:digger",
      "type": "object"
    },
    "268086052": {
      "description": "When an item has a food component, it becomes edible to the player. Must have the 'minecraft:use_duration' component in order to function properly.",
      "properties": {
        "can_always_eat": {
          "description": "If true you can always eat this item (even when not hungry). Default is set to false.",
          "type": "boolean"
        },
        "nutrition": {
          "description": "Value that is added to the entity's nutrition when the item is used. Default is set to 0.",
          "type": "integer"
        },
        "saturation_modifier": {
          "description": "saturation_modifier is used in this formula: (nutrition * saturation_modifier * 2) when applying the saturation buff. Default is set to 0.6.",
          "minimum": 0,
          "type": "number"
        },
        "using_converts_to": {
          "$ref": "#/definitions/1531870811",
          "description": "When used, converts to the item specified by the string in this field. Default does not convert item."
        }
      },
      "title": "minecraft:food",
      "type": "object"
    },
    "2681068491": {
      "properties": {
        "item": {
          "$ref": "#/definitions/1531870811",
          "description": "Ammunition item description identifier."
        },
        "search_inventory": {
          "description": "Can search inventory? Default is set to false.",
          "type": "boolean"
        },
        "use_in_creative": {
          "description": "Can use in creative mode? Default is set to false.",
          "type": "boolean"
        },
        "use_offhand": {
          "description": "Can use off-hand? Default is set to false.",
          "type": "boolean"
        }
      },
      "required": [
        "item"
      ],
      "title": "Ammunition",
      "type": "object"
    },
    "2770948419": {
      "properties": {
        "name": {
          "type": "string"
        },
        "states": {
          "additionalProperties": {
            "$ref": "#/definitions/517105782"
          },
          "type": "object"
        },
        "tags": {
          "type": "string"
        }
      },
      "title": "BlockDescriptorProxy",
      "type": "object"
    },
    "2794205495": {
      "oneOf": [
        {
          "$ref": "#/definitions/2770948419"
        },
        {
          "minLength": 1,
          "type": "string"
        },
        {
          "$ref": "#/definitions/2770948419"
        }
      ],
      "title": "Block Descriptor"
    },
    "2817495317": {
      "description": "The max_stack_size component specifies how many of the item can be stacked together.",
      "oneOf": [
        {
          "maximum": 64,
          "minimum": 1,
          "type": "integer"
        },
        {
          "properties": {
            "value": {
              "description": "Specifies how many of the item that can be stacked.",
              "maximum": 64,
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:max_stack_size"
    },
    "2942400907": {
      "description": "The display_name item component specifies the text shown whenever an item's name is displayed, like in hover text.",
      "properties": {
        "value": {
          "description": "Name shown for an item.",
          "type": "string"
        }
      },
      "title": "minecraft:display_name",
      "type": "object"
    },
    "3053237679": {
      "description": "Record Item Component. Used by record items to play music.",
      "properties": {
        "comparator_signal": {
          "description": "Specifies signal strength for comparator blocks to use, from 1 - 13.",
          "type": "integer"
        },
        "duration": {
          "description": "Specifies duration of sound event in seconds, float value.",
          "type": "number"
        },
        "sound_event": {
          "description": "Sound event type: 13, cat, blocks, chirp, far, mall, mellohi, stal, strad, ward, 11, wait, pigstep, otherside, 5, relic.",
          "enum": [
            "item.use.on",
            "hit",
            "step",
            "step.baby",
            "fly",
            "jump",
            "jump.prevent",
            "break",
            "place",
            "heavy.step",
            "gallop",
            "fall",
            "hurt",
            "hurt.baby",
            "hurt.in.water",
            "death",
            "death.baby",
            "death.in.water",
            "death.to.zombie",
            "ambient",
            "ambient.baby",
            "ambient.in.water",
            "ambient.in.air",
            "ambient.tame",
            "ambient.pollinate",
            "breathe",
            "mad",
            "boost",
            "bow",
            "squish.big",
            "squish.small",
            "fall.big",
            "fall.small",
            "splash",
            "fizz",
            "flap",
            "swim",
            "drink",
            "drink.honey",
            "drink.milk",
            "eat",
            "takeoff",
            "shake",
            "plop",
            "land",
            "saddle",
            "armor",
            "mob.armor_stand.place",
            "add.chest",
            "throw",
            "attack",
            "attack.nodamage",
            "attack.strong",
            "warn",
            "shear",
            "milk",
            "thunder",
            "explode",
            "fire",
            "ignite",
            "fuse",
            "stare",
            "spawn",
            "born",
            "shoot",
            "break.block",
            "launch",
            "blast",
            "large.blast",
            "twinkle",
            "remedy",
            "unfect",
            "convert_to_drowned",
            "levelup",
            "bow.hit",
            "bullet.hit",
            "extinguish.fire",
            "item.fizz",
            "chest.open",
            "chest.closed",
            "shulkerbox.open",
            "shulkerbox.closed",
            "enderchest.open",
            "enderchest.closed",
            "power.on",
            "power.off",
            "attach",
            "detach",
            "deny",
            "tripod",
            "pop",
            "drop.slot",
            "note",
            "thorns",
            "piston.in",
            "piston.out",
            "portal",
            "water",
            "lava.pop",
            "lava",
            "beacon.activate",
            "beacon.ambient",
            "beacon.deactivate",
            "beacon.power",
            "conduit.activate",
            "conduit.ambient",
            "conduit.attack",
            "conduit.deactivate",
            "conduit.short",
            "bubble.pop",
            "bubble.up",
            "bubble.upinside",
            "bubble.down",
            "bubble.downinside",
            "burp",
            "bucket.fill.water",
            "bucket.empty.water",
            "bucket.fill.lava",
            "bucket.empty.lava",
            "bucket.fill.fish",
            "bucket.empty.fish",
            "armor.equip_chain",
            "armor.equip_diamond",
            "armor.equip_elytra",
            "armor.equip_generic",
            "armor.equip_gold",
            "armor.equip_iron",
            "armor.equip_leather",
            "armor.equip_netherite",
            "record.13",
            "record.cat",
            "record.blocks",
            "record.chirp",
            "record.creator",
            "record.creator_music_box",
            "record.far",
            "record.mall",
            "record.mellohi",
            "record.stal",
            "record.strad",
            "record.ward",
            "record.11",
            "record.wait",
            "record.pigstep",
            "record.precipice",
            "record.relic",
            "record.otherside",
            "record.5",
            "record.tears",
            "record.lava_chicken",
            "flop",
            "elderguardian.curse",
            "teleport",
            "shulker.open",
            "shulker.close",
            "mob.warning",
            "mob.warning.baby",
            "haggle",
            "haggle.yes",
            "haggle.no",
            "haggle.idle",
            "disappeared",
            "reappeared",
            "chorusgrow",
            "chorusdeath",
            "glass",
            "potion.brewed",
            "cast.spell",
            "prepare.attack",
            "prepare.summon",
            "prepare.wololo",
            "fang",
            "charge",
            "camera.take_picture",
            "leashknot.break",
            "leashknot.place",
            "growl",
            "whine",
            "pant",
            "purr",
            "purreow",
            "death.min.volume",
            "death.mid.volume",
            "imitate.blaze",
            "imitate.cave_spider",
            "imitate.creeper",
            "imitate.elder_guardian",
            "imitate.ender_dragon",
            "imitate.enderman",
            "imitate.endermite",
            "imitate.evocation_illager",
            "imitate.ghast",
            "imitate.husk",
            "imitate.magma_cube",
            "imitate.polar_bear",
            "imitate.shulker",
            "imitate.silverfish",
            "imitate.skeleton",
            "imitate.slime",
            "imitate.spider",
            "imitate.stray",
            "imitate.vex",
            "imitate.vindication_illager",
            "imitate.witch",
            "imitate.wither",
            "imitate.wither_skeleton",
            "imitate.wolf",
            "imitate.zombie",
            "imitate.zombie_pigman",
            "imitate.zombie_villager",
            "block.end_portal_frame.fill",
            "block.end_portal.spawn",
            "random.anvil_use",
            "bottle.dragonbreath",
            "balloonpop",
            "sparkler.active",
            "item.trident.hit",
            "item.trident.hit_ground",
            "item.trident.return",
            "item.trident.riptide_1",
            "item.trident.riptide_2",
            "item.trident.riptide_3",
            "item.trident.throw",
            "item.trident.thunder",
            "block.fletching_table.use",
            "elemconstruct.open",
            "icebomb.hit",
            "lt.reaction.icebomb",
            "lt.reaction.bleach",
            "lt.reaction.epaste",
            "lt.reaction.epaste2",
            "lt.reaction.fertilizer",
            "lt.reaction.fireball",
            "lt.reaction.mgsalt",
            "lt.reaction.miscfire",
            "lt.reaction.fire",
            "lt.reaction.miscexplosion",
            "lt.reaction.miscmystical",
            "lt.reaction.miscmystical2",
            "lt.reaction.product",
            "sparkler.use",
            "glowstick.use",
            "block.turtle_egg.break",
            "block.turtle_egg.crack",
            "block.turtle_egg.hatch",
            "block.turtle_egg.attack",
            "block.sniffer_egg.crack",
            "block.sniffer_egg.hatch",
            "block.frog_spawn.hatch",
            "block.frog_spawn.break",
            "swoop",
            "presneeze",
            "sneeze",
            "scared",
            "ambient.aggressive",
            "ambient.worried",
            "cant_breed",
            "block.scaffolding.climb",
            "block.bamboo_sapling.place",
            "crossbow.loading.start",
            "crossbow.loading.middle",
            "crossbow.loading.end",
            "crossbow.shoot",
            "crossbow.quick_charge.start",
            "crossbow.quick_charge.middle",
            "crossbow.quick_charge.end",
            "item.shield.block",
            "portal.travel",
            "item.book.put",
            "block.grindstone.use",
            "block.bell.hit",
            "block.campfire.crackle",
            "block.sweet_berry_bush.hurt",
            "block.sweet_berry_bush.pick",
            "block.stonecutter.use",
            "block.cartography_table.use",
            "block.composter.empty",
            "block.composter.fill",
            "block.composter.fill_success",
            "block.composter.ready",
            "roar",
            "stun",
            "block.barrel.open",
            "block.barrel.close",
            "raid.horn",
            "ui.stonecutter.take_result",
            "ui.cartography_table.take_result",
            "ui.loom.take_result",
            "block.smoker.smoke",
            "block.blastfurnace.fire_crackle",
            "block.smithing_table.use",
            "block.loom.use",
            "ambient.in.raid",
            "screech",
            "sleep",
            "block.furnace.lit",
            "convert_mooshroom",
            "milk_suspiciously",
            "celebrate",
            "block.beehive.enter",
            "block.beehive.exit",
            "block.beehive.shear",
            "block.beehive.work",
            "block.beehive.drip",
            "ambient.cave",
            "angry",
            "retreat",
            "converted_to_zombified",
            "step_lava",
            "tempt",
            "panic",
            "admire",
            "particle.soul_escape.quiet",
            "particle.soul_escape.loud",
            "respawn_anchor.charge",
            "respawn_anchor.deplete",
            "respawn_anchor.set_spawn",
            "respawn_anchor.ambient",
            "ambient.crimson_forest.mood",
            "ambient.warped_forest.mood",
            "ambient.soulsand_valley.mood",
            "ambient.nether_wastes.mood",
            "ambient.crimson_forest.additions",
            "ambient.warped_forest.additions",
            "ambient.soulsand_valley.additions",
            "ambient.nether_wastes.additions",
            "ambient.basalt_deltas.additions",
            "ambient.crimson_forest.loop",
            "ambient.warped_forest.loop",
            "ambient.soulsand_valley.loop",
            "ambient.nether_wastes.loop",
            "ambient.basalt_deltas.loop",
            "lodestone_compass.link_compass_to_lodestone",
            "ambient.basalt_deltas.mood",
            "power.on.sculk_sensor",
            "power.off.sculk_sensor",
            "smithing_table.use",
            "default",
            "lay_egg",
            "lay_spawn",
            "bucket.fill.powder_snow",
            "bucket.empty.powder_snow",
            "cauldron_drip.water.pointed_dripstone",
            "cauldron_drip.lava.pointed_dripstone",
            "tilt_down.big_dripleaf",
            "tilt_up.big_dripleaf",
            "drip.water.pointed_dripstone",
            "pick_berries.cave_vines",
            "drip.lava.pointed_dripstone",
            "copper.wax.on",
            "copper.wax.off",
            "scrape",
            "item.spyglass.use",
            "item.spyglass.stop_using",
            "chime.amethyst_block",
            "mob.player.hurt_drown",
            "mob.player.hurt_on_fire",
            "mob.player.hurt_freeze",
            "ambient.screamer",
            "hurt.screamer",
            "death.screamer",
            "milk.screamer",
            "jump_to_block",
            "pre_ram",
            "pre_ram.screamer",
            "ram_impact",
            "ram_impact.screamer",
            "squid.ink_squirt",
            "glow_squid.ink_squirt",
            "convert_to_stray",
            "cake.add_candle",
            "extinguish.candle",
            "ambient.candle",
            "block.click",
            "block.click.fail",
            "block.sculk_catalyst.bloom",
            "block.sculk_shrieker.shriek",
            "nearby_close",
            "nearby_closer",
            "nearby_closest",
            "agitated",
            "listening",
            "heartbeat",
            "tongue",
            "item_given",
            "item_taken",
            "item_thrown",
            "irongolem.crack",
            "irongolem.repair",
            "horn_break",
            "horn_call0",
            "horn_call1",
            "horn_call2",
            "horn_call3",
            "horn_call4",
            "horn_call5",
            "horn_call6",
            "horn_call7",
            "imitate.warden",
            "listening_angry",
            "sonic_boom",
            "sonic_charge",
            "convert_to_frog",
            "block.sculk.spread",
            "charge.sculk",
            "block.sculk_sensor.place",
            "block.sculk_shrieker.place",
            "block.enchanting_table.use",
            "bundle.drop_contents",
            "bundle.insert",
            "bundle.insert_fail",
            "bundle.remove_one",
            "step_sand",
            "dash_ready",
            "pressure_plate.click_off",
            "pressure_plate.click_on",
            "button.click_off",
            "button.click_on",
            "door.open",
            "door.close",
            "trapdoor.open",
            "trapdoor.close",
            "fence_gate.open",
            "fence_gate.close",
            "insert",
            "pickup",
            "insert_enchanted",
            "pickup_enchanted",
            "shatter_pot",
            "break_pot",
            "brush",
            "brush_completed",
            "block.sign.waxed_interact_fail",
            "note.bass",
            "pumpkin.carve",
            "mob.husk.convert_to_zombie",
            "mob.pig.death",
            "mob.hoglin.converted_to_zombified",
            "ambient.underwater.enter",
            "ambient.underwater.exit",
            "bottle.fill",
            "bottle.empty",
            "block.decorated_pot.insert",
            "block.decorated_pot.insert_fail",
            "crafter.craft",
            "crafter.fail",
            "crafter.disable_slot",
            "block.copper_bulb.turn_on",
            "block.copper_bulb.turn_off",
            "breeze_wind_charge.burst",
            "imitate.breeze",
            "trial_spawner.open_shutter",
            "trial_spawner.detect_player",
            "trial_spawner.close_shutter",
            "trial_spawner.spawn_mob",
            "trial_spawner.eject_item",
            "trial_spawner.ambient",
            "mob.armadillo.brush",
            "mob.armadillo.scute_drop",
            "armor.equip_wolf",
            "armor.unequip_wolf",
            "reflect",
            "vault.open_shutter",
            "vault.close_shutter",
            "vault.eject_item",
            "vault.insert_item",
            "vault.insert_item_fail",
            "vault.ambient",
            "vault.activate",
            "vault.deactivate",
            "hurt.reduced",
            "wind_charge.burst",
            "armor.break_wolf",
            "armor.crack_wolf",
            "armor.repair_wolf",
            "mace.smash_air",
            "mace.smash_ground",
            "mace.heavy_smash_ground",
            "trial_spawner.charge_activate",
            "trial_spawner.ambient_ominous",
            "apply_effect.bad_omen",
            "apply_effect.raid_omen",
            "apply_effect.trial_omen",
            "ominous_item_spawner.spawn_item",
            "ominous_bottle.end_use",
            "ominous_item_spawner.spawn_item_begin",
            "ominous_item_spawner.about_to_spawn_item",
            "imitate.bogged",
            "vault.reject_rewarded_player",
            "imitate.drowned",
            "sponge.absorb",
            "imitate.creaking",
            "block.creaking_heart.trail",
            "creaking_heart_spawn",
            "activate",
            "deactivate",
            "freeze",
            "unfreeze",
            "open",
            "open_long",
            "close",
            "close_long",
            "imitate.phantom",
            "imitate.zoglin",
            "imitate.guardian",
            "imitate.ravager",
            "imitate.pillager",
            "place_in_water",
            "state_change",
            "imitate.happy_ghast",
            "armor.unequip_generic",
            "ambient.weather.the_end_light_flash",
            "lead.leash",
            "lead.unleash",
            "lead.break",
            "unsaddle",
            "armor.equip_copper",
            "place_item",
            "single_swap",
            "multi_swap",
            "undefined"
          ],
          "title": "LevelSoundEvent",
          "type": "string"
        }
      },
      "title": "minecraft:record",
      "type": "object"
    },
    "3126701690": {
      "description": "The can_destroy_in_creative component determines if the item can be used by a player to break blocks when in creative mode.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "properties": {
            "value": {
              "description": "Determines whether the item can be used to destroy blocks while in creative mode.",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:can_destroy_in_creative"
    },
    "3133202100": {
      "description": "Specifies that an item is compostable and provides the chance of creating a composting layer in the composter",
      "properties": {
        "composting_chance": {
          "description": "The chance of this item to create a layer upon composting with the composter. Valid value range is 1 - 100 inclusive",
          "maximum": 100,
          "minimum": 1,
          "type": "integer"
        }
      },
      "required": [
        "composting_chance"
      ],
      "title": "minecraft:compostable",
      "type": "object"
    },
    "3168558347": {
      "description": "The tags component specifies which tags an item has on it.",
      "properties": {
        "tags": {
          "description": "An array that can contain multiple item tags.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "title": "minecraft:tags",
      "type": "object"
    },
    "3168878935": {
      "description": "Duration, in seconds, of the item's swing animation played when mining or attacking. Affects visuals only and does not impact attack frequency or other gameplay mechanics.",
      "properties": {
        "value": {
          "description": "Duration, in seconds, of the item's swing animation played when mining or attacking. Affects visuals only and does not impact attack frequency or other gameplay mechanics. Default value: 0.3.",
          "minimum": 0,
          "type": "number"
        }
      },
      "title": "minecraft:swing_duration",
      "type": "object"
    },
    "3173009623": {
      "description": "The damage component determines how much extra damage the item does on attack.",
      "oneOf": [
        {
          "minimum": 0,
          "type": "integer"
        },
        {
          "properties": {
            "value": {
              "description": "Specifies how much extra damage the item does, must be a positive number.",
              "minimum": 0,
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:damage"
    },
    "3178615832": {
      "description": "The stacked_by_data component determines whether the same items with different aux values can stack. Also defines whether the item entities can merge while floating in the world.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "properties": {
            "value": {
              "description": "Determines whether the same item with different aux values can stack. Also defines whether the item entities can merge while floating in the world.",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:stacked_by_data"
    },
    "3178719147": {
      "oneOf": [
        {
          "$ref": "#/definitions/2267778531"
        },
        {
          "type": "number"
        }
      ],
      "title": "Molang expression"
    },
    "3246981949": {
      "description": "Use_animation specifies which animation is played when the player uses the item.",
      "oneOf": [
        {
          "enum": [
            "none",
            "eat",
            "drink",
            "block",
            "bow",
            "camera",
            "crossbow",
            "spear",
            "spyglass",
            "brush"
          ],
          "title": "Animation",
          "type": "string"
        },
        {
          "properties": {
            "value": {
              "description": "Specifies which animation to play when the the item is used.",
              "enum": [
                "none",
                "eat",
                "drink",
                "block",
                "bow",
                "camera",
                "crossbow",
                "spear",
                "spyglass",
                "brush"
              ],
              "title": "Animation",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:use_animation"
    },
    "3256164975": {
      "oneOf": [
        {
          "items": {
            "$ref": "#/definitions/1531870811"
          },
          "type": "array"
        },
        {
          "properties": {
            "items": {
              "description": "Items that may be used to repair an item.",
              "items": {
                "$ref": "#/definitions/1531870811"
              },
              "type": "array"
            },
            "repair_amount": {
              "$ref": "#/definitions/3178719147",
              "description": "How much the item is repaired."
            }
          },
          "required": [
            "items"
          ],
          "type": "object"
        }
      ],
      "title": "Repair"
    },
    "3308324084": {
      "description": "Fuel item component allows this item to be used as fuel in a furnace to 'cook' other items.",
      "oneOf": [
        {
          "minimum": 0.05000000074505806,
          "type": "number"
        },
        {
          "properties": {
            "duration": {
              "description": "Amount of time, in seconds, this fuel will cook items.",
              "minimum": 0.05000000074505806,
              "type": "number"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:fuel"
    },
    "3375297728": {
      "description": "Specifies the base rarity and subsequently color of the item name when the player hovers the cursor over the item.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "properties": {
            "value": {
              "description": "Sets the base rarity of the item. The rarity of an item automatically increases when enchanted, either to Rare when the base rarity is Common or Uncommon, or Epic when the base rarity is Rare.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:rarity"
    },
    "3389099981": {
      "description": "The allow_off_hand component determines whether the item can be placed in the off hand slot of the inventory.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "properties": {
            "value": {
              "description": "Determines whether the item can be placed in the off hand slot.",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:allow_off_hand"
    },
    "34598326": {
      "description": "Specifies the maximum weight limit that a storage item can hold",
      "properties": {
        "max_weight_limit": {
          "description": "The maximum allowed weight of the sum of all contained items. Maximum is 64. Default is 64.",
          "maximum": 64,
          "type": "integer"
        }
      },
      "title": "minecraft:storage_weight_limit",
      "type": "object"
    },
    "3494639353": {
      "description": "The durability item component specifies how much damage the item takes before breaking, and allows the item to be combined to repair or augment them.",
      "properties": {
        "damage_chance": {
          "$ref": "#/definitions/1398826300",
          "description": "Specifies the percentage chance of this item losing durability. Default is set to 100. Defined as an int range with min and max value."
        },
        "max_durability": {
          "description": "Max durability is the amount of damage that this item can take before breaking. This is a required parameter and has a minimum of 0.",
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "max_durability"
      ],
      "title": "minecraft:durability",
      "type": "object"
    },
    "3504177219": {
      "title": "Reference",
      "type": "string"
    },
    "3553782894": {
      "description": "Wearable items can be worn by a player in a specified slot.",
      "properties": {
        "hides_player_location": {
          "description": "Determines whether the Player's location is hidden on Locator Maps and the Locator Bar when the wearable item is worn. Default is false.",
          "type": "boolean"
        },
        "protection": {
          "description": "How much protection the wearable item provides. Default is set to 0.",
          "minimum": 0,
          "type": "integer"
        },
        "slot": {
          "description": "Specifies where the item can be worn. If any non-hand slot is chosen, the max stack size is set to 1.",
          "enum": [
            "slot.weapon.offhand",
            "slot.armor.head",
            "slot.armor.chest",
            "slot.armor.legs",
            "slot.armor.feet"
          ],
          "title": "EquipmentSlot",
          "type": "string"
        }
      },
      "required": [
        "slot"
      ],
      "title": "minecraft:wearable",
      "type": "object"
    },
    "3602397325": {
      "properties": {
        "default_color": {
          "$ref": "#/definitions/3915697282"
        }
      },
      "title": "minecraft:dyeable",
      "type": "object"
    },
    "3635230096": {
      "description": "List of all components used in this item.",
      "properties": {
        "minecraft:allow_off_hand": {
          "$ref": "#/definitions/3389099981",
          "description": "The allow_off_hand component determines whether the item can be placed in the off hand slot of the inventory."
        },
        "minecraft:block_placer": {
          "$ref": "#/definitions/857819254",
          "description": "Items with the block_placer component will place a block when used. \nThis component can also be used instead of the \"minecraft:icon\" component to render the referenced block as the item icon."
        },
        "minecraft:bundle_interaction": {
          "$ref": "#/definitions/2333685719",
          "description": "[EXPERIMENTAL] Adds bundle-specific interactions and tooltip to the item. Requires a \"minecraft:storage_item\" component."
        },
        "minecraft:can_destroy_in_creative": {
          "$ref": "#/definitions/3126701690",
          "description": "The can_destroy_in_creative component determines if the item can be used by a player to break blocks when in creative mode."
        },
        "minecraft:compostable": {
          "$ref": "#/definitions/3133202100",
          "description": "Specifies that an item is compostable and provides the chance of creating a composting layer in the composter"
        },
        "minecraft:cooldown": {
          "$ref": "#/definitions/886176099",
          "description": "After you use an item, all items with a \"minecraft:cooldown\" component with the same \"category\" become unusable for the amount of seconds specified in \"duration\"."
        },
        "minecraft:custom_components": {
          "$ref": "#/definitions/4150838471",
          "deprecated": true,
          "description": "Specifies an array of custom components defined in a script that should be added to this item."
        },
        "minecraft:damage": {
          "$ref": "#/definitions/3173009623",
          "description": "The damage component determines how much extra damage the item does on attack."
        },
        "minecraft:damage_absorption": {
          "$ref": "#/definitions/2063418195",
          "description": "It allows an item to absorb damage that would otherwise be dealt to its wearer. For this to happen, the item needs to be equipped in an armor slot. The absorbed damage reduces the item's durability, with any excess damage being ignored. Because of this, the item also needs a `minecraft:durability` component."
        },
        "minecraft:digger": {
          "$ref": "#/definitions/2499855414",
          "description": "Digger item component specifies how quickly this item can dig specific blocks."
        },
        "minecraft:display_name": {
          "$ref": "#/definitions/2942400907",
          "description": "The display_name item component specifies the text shown whenever an item's name is displayed, like in hover text."
        },
        "minecraft:durability": {
          "$ref": "#/definitions/3494639353",
          "description": "The durability item component specifies how much damage the item takes before breaking, and allows the item to be combined to repair or augment them."
        },
        "minecraft:durability_sensor": {
          "$ref": "#/definitions/1956551060",
          "description": "Enables an item to emit effects when it receives damage. Because of this, the item also needs a `minecraft:durability` component."
        },
        "minecraft:dyeable": {
          "$ref": "#/definitions/3602397325"
        },
        "minecraft:enchantable": {
          "$ref": "#/definitions/1095951327",
          "description": "The enchantable component specifies what enchantments can be applied to the item. Not all enchantments will have an effect on all item components."
        },
        "minecraft:entity_placer": {
          "$ref": "#/definitions/853889472",
          "description": "The entity_placer item component specifies the blocks that the item can be placed on."
        },
        "minecraft:fire_resistant": {
          "$ref": "#/definitions/1326498368",
          "description": "Determines whether the item is immune to burning when dropped in fire or lava."
        },
        "minecraft:food": {
          "$ref": "#/definitions/268086052",
          "description": "When an item has a food component, it becomes edible to the player. Must have the 'minecraft:use_duration' component in order to function properly."
        },
        "minecraft:fuel": {
          "$ref": "#/definitions/3308324084",
          "description": "Fuel item component allows this item to be used as fuel in a furnace to 'cook' other items."
        },
        "minecraft:glint": {
          "$ref": "#/definitions/1206516236",
          "description": "The glint component determines whether the item has the enchanted glint render effect on it."
        },
        "minecraft:hand_equipped": {
          "$ref": "#/definitions/1889822164",
          "description": "The hand_equipped component determines if an item is rendered like a tool while it is in a player's hand."
        },
        "minecraft:hover_text_color": {
          "$ref": "#/definitions/1661309668",
          "description": "The hover_text_color component specifies the color of the item name when the players hovers the cursor over the item."
        },
        "minecraft:icon": {
          "$ref": "#/definitions/1372809227",
          "description": "Icon item component determines which icon graphic will be used to represent the item in the UI and elsewhere."
        },
        "minecraft:interact_button": {
          "$ref": "#/definitions/1754804474",
          "description": "This component is a boolean or string that determines if the interact button is shown in touch controls and what text is displayed on the button. When set as true, default \"Use Item\" text will be displayed."
        },
        "minecraft:liquid_clipped": {
          "$ref": "#/definitions/2359991381",
          "description": "The liquid_clipped component determines whether the item interacts with liquid blocks on use."
        },
        "minecraft:max_stack_size": {
          "$ref": "#/definitions/2817495317",
          "description": "The max_stack_size component specifies how many of the item can be stacked together."
        },
        "minecraft:projectile": {
          "$ref": "#/definitions/608914689",
          "description": "Projectile items shoot out, like an arrow."
        },
        "minecraft:rarity": {
          "$ref": "#/definitions/3375297728",
          "description": "Specifies the base rarity and subsequently color of the item name when the player hovers the cursor over the item."
        },
        "minecraft:record": {
          "$ref": "#/definitions/3053237679",
          "description": "Record Item Component. Used by record items to play music."
        },
        "minecraft:repairable": {
          "$ref": "#/definitions/1658474219",
          "description": "The repairable item component specifies which items can be used to repair this item, along with how much durability is gained."
        },
        "minecraft:shooter": {
          "$ref": "#/definitions/3781185164",
          "description": "Shooter Item Component."
        },
        "minecraft:should_despawn": {
          "$ref": "#/definitions/3875281249",
          "description": "Should_despawn component determines if the item should eventually despawn while floating in the world"
        },
        "minecraft:stacked_by_data": {
          "$ref": "#/definitions/3178615832",
          "description": "The stacked_by_data component determines whether the same items with different aux values can stack. Also defines whether the item entities can merge while floating in the world."
        },
        "minecraft:storage_item": {
          "$ref": "#/definitions/1873913113",
          "description": "[EXPERIMENTAL] Storage Items can be used by other components to store other items within this item."
        },
        "minecraft:storage_weight_limit": {
          "$ref": "#/definitions/34598326",
          "description": "Specifies the maximum weight limit that a storage item can hold"
        },
        "minecraft:storage_weight_modifier": {
          "$ref": "#/definitions/842194090",
          "description": "Specifies the maximum weight limit that a storage item can hold"
        },
        "minecraft:swing_duration": {
          "$ref": "#/definitions/3168878935",
          "description": "Duration, in seconds, of the item's swing animation played when mining or attacking. Affects visuals only and does not impact attack frequency or other gameplay mechanics."
        },
        "minecraft:tags": {
          "$ref": "#/definitions/3168558347",
          "description": "The tags component specifies which tags an item has on it."
        },
        "minecraft:throwable": {
          "$ref": "#/definitions/3715727616",
          "description": "Throwable items can be thrown by the player, such as a snowball."
        },
        "minecraft:use_animation": {
          "$ref": "#/definitions/3246981949",
          "description": "Use_animation specifies which animation is played when the player uses the item."
        },
        "minecraft:use_modifiers": {
          "$ref": "#/definitions/435751873",
          "description": "Modifies use behavior, including how long the item takes to use and the player's movement speed."
        },
        "minecraft:wearable": {
          "$ref": "#/definitions/3553782894",
          "description": "Wearable items can be worn by a player in a specified slot."
        }
      },
      "title": "components",
      "type": "object"
    },
    "3681664844": {
      "title": "Identifier",
      "type": "string"
    },
    "3715727616": {
      "description": "Throwable items can be thrown by the player, such as a snowball.",
      "properties": {
        "do_swing_animation": {
          "description": "Determines whether the item should use the swing animation when thrown. Default is set to false.",
          "type": "boolean"
        },
        "launch_power_scale": {
          "description": "The scale at which the power of the throw increases. Default is set to 1.0.",
          "type": "number"
        },
        "max_draw_duration": {
          "description": "The maximum duration to draw a throwable item. Default is set to 0.0.",
          "type": "number"
        },
        "max_launch_power": {
          "description": "The maximum power to launch the throwable item. Default is set to 1.0.",
          "type": "number"
        },
        "min_draw_duration": {
          "description": "The minimum duration to draw a throwable item. Default is set to 0.0.",
          "type": "number"
        },
        "scale_power_by_draw_duration": {
          "description": "Whether or not the power of the throw increases with duration charged. Default is set to false.",
          "type": "boolean"
        }
      },
      "title": "minecraft:throwable",
      "type": "object"
    },
    "3781185164": {
      "description": "Shooter Item Component.",
      "properties": {
        "ammunition": {
          "description": "Ammunition.",
          "items": {
            "$ref": "#/definitions/2681068491"
          },
          "type": "array"
        },
        "charge_on_draw": {
          "description": "Charge on draw? Default is set to false.",
          "type": "boolean"
        },
        "max_draw_duration": {
          "description": "Draw Duration. Default is set to 0.",
          "type": "number"
        },
        "scale_power_by_draw_duration": {
          "description": "Scale power by draw duration? Default is set to false.",
          "type": "boolean"
        }
      },
      "title": "minecraft:shooter",
      "type": "object"
    },
    "3875281249": {
      "description": "Should_despawn component determines if the item should eventually despawn while floating in the world",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "properties": {
            "value": {
              "description": "Determines whether the item should eventually despawn while floating in the world.",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "title": "minecraft:should_despawn"
    },
    "3915697282": {
      "$metaProperties": {
        "CEREAL_EDITOR_SCHEMA_TAG": "type:color"
      },
      "oneOf": [
        {
          "pattern": "^#[a-fA-F0-9]{6}$",
          "type": "string"
        },
        {
          "items": {
            "type": "integer"
          },
          "maxItems": 3,
          "minItems": 3,
          "type": "array"
        }
      ],
      "title": "Color255RGB"
    },
    "4121537914": {
      "description": "menu_category contains the creative group name and category for this item.",
      "properties": {
        "category": {
          "description": "Creative category where this item belongs. Defaults to \"none\".",
          "enum": [
            "construction",
            "nature",
            "equipment",
            "items",
            "none"
          ],
          "title": "CreativeItemCategory",
          "type": "string"
        },
        "group": {
          "description": "The Creative Group that this item belongs to. Group name is limited to 256 characters. The name also must start with a namespace.",
          "maxLength": 256,
          "pattern": "^(?:.)+:(?:.)+$",
          "type": "string",
          "x-regex-flags": "ECMAScript,icase"
        },
        "is_hidden_in_commands": {
          "description": "Determines whether or not this item can be used with commands. Defaults to false.",
          "type": "boolean"
        }
      },
      "title": "menu_category",
      "type": "object"
    },
    "4150838471": {
      "description": "Specifies an array of custom components defined in a script that should be added to this item.",
      "items": {
        "pattern": "^(?:(?!^(minecraft):).)+:(?:.)+$",
        "type": "string",
        "x-regex-flags": "ECMAScript,icase"
      },
      "title": "minecraft:custom_components",
      "type": "array"
    },
    "435751873": {
      "description": "Modifies use behavior, including how long the item takes to use and the player's movement speed.",
      "properties": {
        "emit_vibrations": {
          "description": "Whether vibrations are emitted when the item starts or stops being used. Default value: true.",
          "type": "boolean"
        },
        "movement_modifier": {
          "description": "Multiplier applied to the player's movement speed while the item is in use.",
          "maximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "use_duration": {
          "description": "Time, in seconds, that the item takes to use. Default value: 0.",
          "minimum": 0,
          "type": "number"
        }
      },
      "title": "minecraft:use_modifiers",
      "type": "object"
    },
    "517105782": {
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "type": "string"
        },
        {
          "type": "boolean"
        }
      ],
      "title": "compound_proxy"
    },
    "608914689": {
      "description": "Projectile items shoot out, like an arrow.",
      "properties": {
        "minimum_critical_power": {
          "description": "Specifies how long a player must charge a projectile for it to critically hit.",
          "type": "number"
        },
        "projectile_entity": {
          "$ref": "#/definitions/1493335182",
          "description": "Which entity is to be fired as a projectile.",
          "minLength": 0,
          "pattern": "^(?:\\w+(?:\\.\\w+)*:(?=\\w))?(?:\\w+(?:\\.\\w+)*)(?:<((?:\\w+(?:\\.\\w+)*:(?=\\w))?\\w+(?:\\.\\w+)*)*>)?$"
        }
      },
      "required": [
        "projectile_entity"
      ],
      "title": "minecraft:projectile",
      "type": "object"
    },
    "764203503": {
      "description": "Defines both the durability threshold, and the effects emitted when that threshold is met.",
      "properties": {
        "durability": {
          "description": "The effects are emitted when the item durability value is less than or equal to this value.",
          "type": "integer"
        },
        "particle_type": {
          "description": "Particle effect to emit when the threshold is met.",
          "enum": [
            "none",
            "bubble",
            "bubblemanual",
            "crit",
            "blockforcefield",
            "smoke",
            "explode",
            "evaporation",
            "flame",
            "candleflame",
            "lava",
            "largesmoke",
            "reddust",
            "risingborderdust",
            "iconcrack",
            "snowballpoof",
            "largeexplode",
            "hugeexplosion",
            "breezewindexplosion",
            "mobflame",
            "heart",
            "terrain",
            "townaura",
            "portal",
            "watersplash",
            "watersplashmanual",
            "waterwake",
            "dripwater",
            "driplava",
            "driphoney",
            "stalactitedripwater",
            "stalactitedriplava",
            "fallingdust",
            "mobspell",
            "mobspellambient",
            "mobspellinstantaneous",
            "ink",
            "slime",
            "rainsplash",
            "villagerangry",
            "villagerhappy",
            "enchantingtable",
            "trackingemitter",
            "note",
            "witchspell",
            "carrotboost",
            "mobappearance",
            "endrod",
            "dragonbreath",
            "spit",
            "totem",
            "food",
            "fireworksstarter",
            "fireworks",
            "fireworksoverlay",
            "balloongas",
            "coloredflame",
            "sparkler",
            "conduit",
            "bubblecolumnup",
            "bubblecolumndown",
            "sneeze",
            "shulkerbullet",
            "bleach",
            "dragondestroyblock",
            "myceliumdust",
            "fallingborderdust",
            "campfiresmoke",
            "campfiresmoketall",
            "dragonbreathfire",
            "dragonbreathtrail",
            "soul",
            "obsidiantear",
            "portalreverse",
            "snowflake",
            "wax",
            "electricspark",
            "shriek",
            "sculksoul",
            "sonicexplosion",
            "dustplume",
            "whitesmoke",
            "vaultconnection",
            "windexplosion",
            "wolfarmorcrack",
            "creakingcrumble",
            "paleoakleaves",
            "eyeblossomopen",
            "eyeblossomclose",
            "blueflame",
            "greenflame"
          ],
          "title": "ParticleType",
          "type": "string"
        },
        "sound_event": {
          "description": "Sound effect to emit when the threshold is met.",
          "enum": [
            "item.use.on",
            "hit",
            "step",
            "step.baby",
            "fly",
            "jump",
            "jump.prevent",
            "break",
            "place",
            "heavy.step",
            "gallop",
            "fall",
            "hurt",
            "hurt.baby",
            "hurt.in.water",
            "death",
            "death.baby",
            "death.in.water",
            "death.to.zombie",
            "ambient",
            "ambient.baby",
            "ambient.in.water",
            "ambient.in.air",
            "ambient.tame",
            "ambient.pollinate",
            "breathe",
            "mad",
            "boost",
            "bow",
            "squish.big",
            "squish.small",
            "fall.big",
            "fall.small",
            "splash",
            "fizz",
            "flap",
            "swim",
            "drink",
            "drink.honey",
            "drink.milk",
            "eat",
            "takeoff",
            "shake",
            "plop",
            "land",
            "saddle",
            "armor",
            "mob.armor_stand.place",
            "add.chest",
            "throw",
            "attack",
            "attack.nodamage",
            "attack.strong",
            "warn",
            "shear",
            "milk",
            "thunder",
            "explode",
            "fire",
            "ignite",
            "fuse",
            "stare",
            "spawn",
            "born",
            "shoot",
            "break.block",
            "launch",
            "blast",
            "large.blast",
            "twinkle",
            "remedy",
            "unfect",
            "convert_to_drowned",
            "levelup",
            "bow.hit",
            "bullet.hit",
            "extinguish.fire",
            "item.fizz",
            "chest.open",
            "chest.closed",
            "shulkerbox.open",
            "shulkerbox.closed",
            "enderchest.open",
            "enderchest.closed",
            "power.on",
            "power.off",
            "attach",
            "detach",
            "deny",
            "tripod",
            "pop",
            "drop.slot",
            "note",
            "thorns",
            "piston.in",
            "piston.out",
            "portal",
            "water",
            "lava.pop",
            "lava",
            "beacon.activate",
            "beacon.ambient",
            "beacon.deactivate",
            "beacon.power",
            "conduit.activate",
            "conduit.ambient",
            "conduit.attack",
            "conduit.deactivate",
            "conduit.short",
            "bubble.pop",
            "bubble.up",
            "bubble.upinside",
            "bubble.down",
            "bubble.downinside",
            "burp",
            "bucket.fill.water",
            "bucket.empty.water",
            "bucket.fill.lava",
            "bucket.empty.lava",
            "bucket.fill.fish",
            "bucket.empty.fish",
            "armor.equip_chain",
            "armor.equip_diamond",
            "armor.equip_elytra",
            "armor.equip_generic",
            "armor.equip_gold",
            "armor.equip_iron",
            "armor.equip_leather",
            "armor.equip_netherite",
            "record.13",
            "record.cat",
            "record.blocks",
            "record.chirp",
            "record.creator",
            "record.creator_music_box",
            "record.far",
            "record.mall",
            "record.mellohi",
            "record.stal",
            "record.strad",
            "record.ward",
            "record.11",
            "record.wait",
            "record.pigstep",
            "record.precipice",
            "record.relic",
            "record.otherside",
            "record.5",
            "record.tears",
            "record.lava_chicken",
            "flop",
            "elderguardian.curse",
            "teleport",
            "shulker.open",
            "shulker.close",
            "mob.warning",
            "mob.warning.baby",
            "haggle",
            "haggle.yes",
            "haggle.no",
            "haggle.idle",
            "disappeared",
            "reappeared",
            "chorusgrow",
            "chorusdeath",
            "glass",
            "potion.brewed",
            "cast.spell",
            "prepare.attack",
            "prepare.summon",
            "prepare.wololo",
            "fang",
            "charge",
            "camera.take_picture",
            "leashknot.break",
            "leashknot.place",
            "growl",
            "whine",
            "pant",
            "purr",
            "purreow",
            "death.min.volume",
            "death.mid.volume",
            "imitate.blaze",
            "imitate.cave_spider",
            "imitate.creeper",
            "imitate.elder_guardian",
            "imitate.ender_dragon",
            "imitate.enderman",
            "imitate.endermite",
            "imitate.evocation_illager",
            "imitate.ghast",
            "imitate.husk",
            "imitate.magma_cube",
            "imitate.polar_bear",
            "imitate.shulker",
            "imitate.silverfish",
            "imitate.skeleton",
            "imitate.slime",
            "imitate.spider",
            "imitate.stray",
            "imitate.vex",
            "imitate.vindication_illager",
            "imitate.witch",
            "imitate.wither",
            "imitate.wither_skeleton",
            "imitate.wolf",
            "imitate.zombie",
            "imitate.zombie_pigman",
            "imitate.zombie_villager",
            "block.end_portal_frame.fill",
            "block.end_portal.spawn",
            "random.anvil_use",
            "bottle.dragonbreath",
            "balloonpop",
            "sparkler.active",
            "item.trident.hit",
            "item.trident.hit_ground",
            "item.trident.return",
            "item.trident.riptide_1",
            "item.trident.riptide_2",
            "item.trident.riptide_3",
            "item.trident.throw",
            "item.trident.thunder",
            "block.fletching_table.use",
            "elemconstruct.open",
            "icebomb.hit",
            "lt.reaction.icebomb",
            "lt.reaction.bleach",
            "lt.reaction.epaste",
            "lt.reaction.epaste2",
            "lt.reaction.fertilizer",
            "lt.reaction.fireball",
            "lt.reaction.mgsalt",
            "lt.reaction.miscfire",
            "lt.reaction.fire",
            "lt.reaction.miscexplosion",
            "lt.reaction.miscmystical",
            "lt.reaction.miscmystical2",
            "lt.reaction.product",
            "sparkler.use",
            "glowstick.use",
            "block.turtle_egg.break",
            "block.turtle_egg.crack",
            "block.turtle_egg.hatch",
            "block.turtle_egg.attack",
            "block.sniffer_egg.crack",
            "block.sniffer_egg.hatch",
            "block.frog_spawn.hatch",
            "block.frog_spawn.break",
            "swoop",
            "presneeze",
            "sneeze",
            "scared",
            "ambient.aggressive",
            "ambient.worried",
            "cant_breed",
            "block.scaffolding.climb",
            "block.bamboo_sapling.place",
            "crossbow.loading.start",
            "crossbow.loading.middle",
            "crossbow.loading.end",
            "crossbow.shoot",
            "crossbow.quick_charge.start",
            "crossbow.quick_charge.middle",
            "crossbow.quick_charge.end",
            "item.shield.block",
            "portal.travel",
            "item.book.put",
            "block.grindstone.use",
            "block.bell.hit",
            "block.campfire.crackle",
            "block.sweet_berry_bush.hurt",
            "block.sweet_berry_bush.pick",
            "block.stonecutter.use",
            "block.cartography_table.use",
            "block.composter.empty",
            "block.composter.fill",
            "block.composter.fill_success",
            "block.composter.ready",
            "roar",
            "stun",
            "block.barrel.open",
            "block.barrel.close",
            "raid.horn",
            "ui.stonecutter.take_result",
            "ui.cartography_table.take_result",
            "ui.loom.take_result",
            "block.smoker.smoke",
            "block.blastfurnace.fire_crackle",
            "block.smithing_table.use",
            "block.loom.use",
            "ambient.in.raid",
            "screech",
            "sleep",
            "block.furnace.lit",
            "convert_mooshroom",
            "milk_suspiciously",
            "celebrate",
            "block.beehive.enter",
            "block.beehive.exit",
            "block.beehive.shear",
            "block.beehive.work",
            "block.beehive.drip",
            "ambient.cave",
            "angry",
            "retreat",
            "converted_to_zombified",
            "step_lava",
            "tempt",
            "panic",
            "admire",
            "particle.soul_escape.quiet",
            "particle.soul_escape.loud",
            "respawn_anchor.charge",
            "respawn_anchor.deplete",
            "respawn_anchor.set_spawn",
            "respawn_anchor.ambient",
            "ambient.crimson_forest.mood",
            "ambient.warped_forest.mood",
            "ambient.soulsand_valley.mood",
            "ambient.nether_wastes.mood",
            "ambient.crimson_forest.additions",
            "ambient.warped_forest.additions",
            "ambient.soulsand_valley.additions",
            "ambient.nether_wastes.additions",
            "ambient.basalt_deltas.additions",
            "ambient.crimson_forest.loop",
            "ambient.warped_forest.loop",
            "ambient.soulsand_valley.loop",
            "ambient.nether_wastes.loop",
            "ambient.basalt_deltas.loop",
            "lodestone_compass.link_compass_to_lodestone",
            "ambient.basalt_deltas.mood",
            "power.on.sculk_sensor",
            "power.off.sculk_sensor",
            "smithing_table.use",
            "default",
            "lay_egg",
            "lay_spawn",
            "bucket.fill.powder_snow",
            "bucket.empty.powder_snow",
            "cauldron_drip.water.pointed_dripstone",
            "cauldron_drip.lava.pointed_dripstone",
            "tilt_down.big_dripleaf",
            "tilt_up.big_dripleaf",
            "drip.water.pointed_dripstone",
            "pick_berries.cave_vines",
            "drip.lava.pointed_dripstone",
            "copper.wax.on",
            "copper.wax.off",
            "scrape",
            "item.spyglass.use",
            "item.spyglass.stop_using",
            "chime.amethyst_block",
            "mob.player.hurt_drown",
            "mob.player.hurt_on_fire",
            "mob.player.hurt_freeze",
            "ambient.screamer",
            "hurt.screamer",
            "death.screamer",
            "milk.screamer",
            "jump_to_block",
            "pre_ram",
            "pre_ram.screamer",
            "ram_impact",
            "ram_impact.screamer",
            "squid.ink_squirt",
            "glow_squid.ink_squirt",
            "convert_to_stray",
            "cake.add_candle",
            "extinguish.candle",
            "ambient.candle",
            "block.click",
            "block.click.fail",
            "block.sculk_catalyst.bloom",
            "block.sculk_shrieker.shriek",
            "nearby_close",
            "nearby_closer",
            "nearby_closest",
            "agitated",
            "listening",
            "heartbeat",
            "tongue",
            "item_given",
            "item_taken",
            "item_thrown",
            "irongolem.crack",
            "irongolem.repair",
            "horn_break",
            "horn_call0",
            "horn_call1",
            "horn_call2",
            "horn_call3",
            "horn_call4",
            "horn_call5",
            "horn_call6",
            "horn_call7",
            "imitate.warden",
            "listening_angry",
            "sonic_boom",
            "sonic_charge",
            "convert_to_frog",
            "block.sculk.spread",
            "charge.sculk",
            "block.sculk_sensor.place",
            "block.sculk_shrieker.place",
            "block.enchanting_table.use",
            "bundle.drop_contents",
            "bundle.insert",
            "bundle.insert_fail",
            "bundle.remove_one",
            "step_sand",
            "dash_ready",
            "pressure_plate.click_off",
            "pressure_plate.click_on",
            "button.click_off",
            "button.click_on",
            "door.open",
            "door.close",
            "trapdoor.open",
            "trapdoor.close",
            "fence_gate.open",
            "fence_gate.close",
            "insert",
            "pickup",
            "insert_enchanted",
            "pickup_enchanted",
            "shatter_pot",
            "break_pot",
            "brush",
            "brush_completed",
            "block.sign.waxed_interact_fail",
            "note.bass",
            "pumpkin.carve",
            "mob.husk.convert_to_zombie",
            "mob.pig.death",
            "mob.hoglin.converted_to_zombified",
            "ambient.underwater.enter",
            "ambient.underwater.exit",
            "bottle.fill",
            "bottle.empty",
            "block.decorated_pot.insert",
            "block.decorated_pot.insert_fail",
            "crafter.craft",
            "crafter.fail",
            "crafter.disable_slot",
            "block.copper_bulb.turn_on",
            "block.copper_bulb.turn_off",
            "breeze_wind_charge.burst",
            "imitate.breeze",
            "trial_spawner.open_shutter",
            "trial_spawner.detect_player",
            "trial_spawner.close_shutter",
            "trial_spawner.spawn_mob",
            "trial_spawner.eject_item",
            "trial_spawner.ambient",
            "mob.armadillo.brush",
            "mob.armadillo.scute_drop",
            "armor.equip_wolf",
            "armor.unequip_wolf",
            "reflect",
            "vault.open_shutter",
            "vault.close_shutter",
            "vault.eject_item",
            "vault.insert_item",
            "vault.insert_item_fail",
            "vault.ambient",
            "vault.activate",
            "vault.deactivate",
            "hurt.reduced",
            "wind_charge.burst",
            "armor.break_wolf",
            "armor.crack_wolf",
            "armor.repair_wolf",
            "mace.smash_air",
            "mace.smash_ground",
            "mace.heavy_smash_ground",
            "trial_spawner.charge_activate",
            "trial_spawner.ambient_ominous",
            "apply_effect.bad_omen",
            "apply_effect.raid_omen",
            "apply_effect.trial_omen",
            "ominous_item_spawner.spawn_item",
            "ominous_bottle.end_use",
            "ominous_item_spawner.spawn_item_begin",
            "ominous_item_spawner.about_to_spawn_item",
            "imitate.bogged",
            "vault.reject_rewarded_player",
            "imitate.drowned",
            "sponge.absorb",
            "imitate.creaking",
            "block.creaking_heart.trail",
            "creaking_heart_spawn",
            "activate",
            "deactivate",
            "freeze",
            "unfreeze",
            "open",
            "open_long",
            "close",
            "close_long",
            "imitate.phantom",
            "imitate.zoglin",
            "imitate.guardian",
            "imitate.ravager",
            "imitate.pillager",
            "place_in_water",
            "state_change",
            "imitate.happy_ghast",
            "armor.unequip_generic",
            "ambient.weather.the_end_light_flash",
            "lead.leash",
            "lead.unleash",
            "lead.break",
            "unsaddle",
            "armor.equip_copper",
            "place_item",
            "single_swap",
            "multi_swap",
            "undefined"
          ],
          "title": "LevelSoundEvent",
          "type": "string"
        }
      },
      "title": "minecraft:durability_sensor durability_threshold",
      "type": "object"
    },
    "842194090": {
      "description": "Specifies the maximum weight limit that a storage item can hold",
      "properties": {
        "weight_in_storage_item": {
          "description": "The weight of this item when inside another Storage Item. Default is 4. 0 means item is not allowed in another Storage Item.",
          "minimum": 0,
          "type": "integer"
        }
      },
      "title": "minecraft:storage_weight_modifier",
      "type": "object"
    },
    "853889472": {
      "description": "The entity_placer item component specifies the blocks that the item can be placed on.",
      "properties": {
        "dispense_on": {
          "description": "List of block descriptors of the blocks that this item can be dispensed on. If left empty, all blocks will be allowed.",
          "items": {
            "$ref": "#/definitions/2794205495"
          },
          "type": "array"
        },
        "entity": {
          "$ref": "#/definitions/1493335182",
          "description": "The entity to be placed in the world.",
          "minLength": 0,
          "pattern": "^(?:\\w+(?:\\.\\w+)*:(?=\\w))?(?:\\w+(?:\\.\\w+)*)(?:<((?:\\w+(?:\\.\\w+)*:(?=\\w))?\\w+(?:\\.\\w+)*)*>)?$"
        },
        "use_on": {
          "description": "List of block descriptors of the blocks that this item can be used on. If left empty, all blocks will be allowed.",
          "items": {
            "$ref": "#/definitions/2794205495"
          },
          "type": "array"
        }
      },
      "title": "minecraft:entity_placer",
      "type": "object"
    },
    "857819254": {
      "description": "Items with the block_placer component will place a block when used. \nThis component can also be used instead of the \"minecraft:icon\" component to render the referenced block as the item icon.",
      "properties": {
        "block": {
          "$ref": "#/definitions/1527037515",
          "description": "Defines the block that will be placed."
        },
        "replace_block_item": {
          "description": "If true, the item will be registered as the item for this block. This item will be returned by default when the block is broken/picked. Note: the identifier for this item must match the block's identifier for this field to be valid.",
          "type": "boolean"
        },
        "use_on": {
          "description": "List of block descriptors of the blocks that this item can be used on. If left empty, all blocks will be allowed.",
          "items": {
            "$ref": "#/definitions/2794205495"
          },
          "type": "array"
        }
      },
      "required": [
        "block"
      ],
      "title": "minecraft:block_placer",
      "type": "object"
    },
    "886176099": {
      "description": "After you use an item, all items with a \"minecraft:cooldown\" component with the same \"category\" become unusable for the amount of seconds specified in \"duration\".",
      "properties": {
        "category": {
          "description": "All items with the same \"category\" are put on cooldown when one is used.",
          "type": "string"
        },
        "duration": {
          "description": "How long the item is on cooldown before being able to be used again.",
          "type": "number"
        }
      },
      "required": [
        "category",
        "duration"
      ],
      "title": "minecraft:cooldown",
      "type": "object"
    }
  },
  "description": "Item definition includes the \"description\" and \"components\" sections.",
  "properties": {
    "components": {
      "$ref": "#/definitions/3635230096",
      "description": "List of all components used in this item."
    },
    "description": {
      "$ref": "#/definitions/2418450159",
      "description": "Contains the required identifier for the item. May contain optional fields like menu_category."
    }
  },
  "required": [
    "description"
  ],
  "title": "minecraft:item v1.21.110",
  "type": "object",
  "x-format-version": "1.21.110"
}