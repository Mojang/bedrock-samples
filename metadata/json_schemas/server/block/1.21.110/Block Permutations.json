{
  "$id": "3404364787",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "1088021931": {
      "properties": {
        "bone_visibility": {
          "additionalProperties": {
            "$ref": "#/definitions/3178719147"
          },
          "description": "A JSON object that contains a list of key/value pairs that map from bone name in the specified geometry file (key) to a Molang expression that tells whether the bone should be visible or not (value). The expression is limited to using the \"query.block_state()\" query. When using \"bone_visibility\" in geometry components in the \"permutations\" section, you must also have a default version of the geometry component with \"bone_visibility\" in the \"components\" section.",
          "maxProperties": 64,
          "type": "object"
        },
        "culling": {
          "description": "Which block_culling .json file to use when rendering this block.",
          "maxLength": 256,
          "type": "string"
        },
        "culling_layer": {
          "description": "A string that allows culling rule to group multiple blocks together when comparing them. When using the minecraft namespace, the only allowed culling layer identifiers are : \"minecraft:culling_layer.undefined\" or \"minecraft:culling_layer.leaves\". When using no namespaces or a custom one, the names must start and end with an alpha-numeric character.",
          "maxLength": 256,
          "minLength": 1,
          "pattern": "^(?:minecraft:culling_layer.undefined|minecraft:culling_layer.leaves|(?!minecraft:)[a-z0-9].*[a-z0-9])$",
          "type": "string",
          "x-regex-flags": "ECMAScript,icase"
        },
        "identifier": {
          "description": "The description identifier of the geometry to use to render this block. This identifier must either match an existing geometry identifier in any of the loaded resource packs or be one of the currently supported Vanilla identifiers: \"minecraft:geometry.full_block\" or \"minecraft:geometry.cross\".",
          "maxLength": 256,
          "type": "string"
        },
        "uv_lock": {
          "description": "A field that is either a Boolean or an array of strings, max size 64 strings. This field locks UV orientation for all/some bones in the geometry, regardless of how the block is rotated using \"minecraft:transformation\" component. For performance reasons it's recommended to use the Boolean.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "items": {
                "type": "string"
              },
              "maxItems": 64,
              "type": "array"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "title": "Detailed Geometry",
      "type": "object"
    },
    "1483802163": {
      "description": "The component that describes the geometry to use to render this block. It can be specified as a JSON object with the following fields, or simply as a string containing the description identifier of the geometry to use to render this block. This identifier must either match an existing geometry identifier in any of the loaded resource packs or be one of the currently supported Vanilla identifiers: \"minecraft:geometry.full_block\" or \"minecraft:geometry.cross\".",
      "oneOf": [
        {
          "maxLength": 256,
          "type": "string"
        },
        {
          "$ref": "#/definitions/1088021931",
          "x-runtime-constraint-description": "Cannot use bone visibility feature with Vanilla geometries"
        }
      ],
      "title": "Geometry"
    },
    "1567399336": {
      "description": "Sets the color and optional tint of the block when rendered to a map.",
      "properties": {
        "color": {
          "$ref": "#/definitions/3915697282",
          "description": "Sets the color of the block when rendered to a map. The color is represented as a hex value in the format \"#RRGGBB\". May also be expressed as an array of [R, G, B] from 0 to 255."
        },
        "tint_method": {
          "description": "Sets the tint method of the block when rendered to a map. Tint method logic varies, but often refers to the \"rain\" and \"temperature\" of the biome the block is placed in to compute the tint. Supported tint methods are \"none\", \"default_foliage\", \"birch_foliage\", \"evergreen_foliage\", \"dry_foliage\", \"grass\" and \"water\"",
          "enum": [
            "none",
            "default_foliage",
            "birch_foliage",
            "evergreen_foliage",
            "dry_foliage",
            "grass",
            "water"
          ],
          "title": "Tint Method",
          "type": "string"
        }
      },
      "required": [
        "color"
      ],
      "title": "Map Color",
      "type": "object"
    },
    "2155690250": {
      "description": "The amount that light will be dampened when it passes through the block. Higher value means the light will be dampened more.",
      "maximum": 15,
      "minimum": 0,
      "title": "Light Dampening",
      "type": "integer"
    },
    "2267778531": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "properties": {
            "expression": {
              "type": "string"
            },
            "version": {
              "type": "integer"
            }
          },
          "required": [
            "expression",
            "version"
          ],
          "type": "object"
        }
      ],
      "title": "Molang string"
    },
    "2279409622": {
      "description": "Defines the support shape of the block. Currently only allows for blocks to have the same shape as a Vanilla fence and Vanilla stair. To work with custom stairs, requires the use of \"minecraft:vertical_half\" and \"minecraft:cardinal_direction\" or \"minecraft:facing_direction\" which can be set through the \"minecraft:placement_direction\" block trait. Custom blocks without this component will default to unit cube support. The type of support shape for this block. Currently, the options are: \"fence\" and \"stair\".",
      "properties": {
        "shape": {
          "description": "Required field. The type of support shape for this block.",
          "enum": [
            "fence",
            "stair"
          ],
          "title": "Support Shape",
          "type": "string"
        }
      },
      "required": [
        "shape"
      ],
      "title": "Support",
      "type": "object"
    },
    "2735968029": {
      "description": "Use this component to define tags, vanilla or custom. Valid tags are of the format \"namespace:tag_name\". The array of tags must be non-empty.",
      "items": {
        "pattern": "^(?:.)+:(?:.)+$",
        "type": "string",
        "x-regex-flags": "ECMAScript,icase"
      },
      "title": "Tags",
      "type": "array"
    },
    "2879220220": {
      "description": "Specifies the language file key that maps to what text will be displayed when you hover over the block in your inventory and hotbar. If the string given can not be resolved as a loc string, the raw string given will be displayed. If this component is omitted, the name of the block will be used as the display name.",
      "maxLength": 256,
      "title": "Display Name",
      "type": "string"
    },
    "3178719147": {
      "oneOf": [
        {
          "$ref": "#/definitions/2267778531"
        },
        {
          "type": "number"
        }
      ],
      "title": "Molang expression"
    },
    "3527967830": {
      "description": "Sets the particles that will be used when block is destroyed. This component can be omitted.",
      "properties": {
        "particle_count": {
          "description": "Sets number of particles to spawn on block destruction. Default is 100.",
          "maximum": 255,
          "minimum": 0,
          "type": "integer"
        },
        "texture": {
          "description": "The texture name used for the particle.",
          "type": "string"
        },
        "tint_method": {
          "description": "Sets the tint method of the particle. Tint method logic varies, but often refers to the \"rain\" and \"temperature\" of the biome the block is placed in to compute the tint. Supported tint methods are \"none\", \"default_foliage\", \"birch_foliage\", \"evergreen_foliage\", \"dry_foliage\", \"grass\" and \"water\"",
          "enum": [
            "none",
            "default_foliage",
            "birch_foliage",
            "evergreen_foliage",
            "dry_foliage",
            "grass",
            "water"
          ],
          "title": "Tint Method",
          "type": "string"
        }
      },
      "title": "Destruction Particles",
      "type": "object"
    },
    "3655705218": {
      "description": "The amount of light this block will emit. Higher value means more light will be emitted.",
      "maximum": 15,
      "minimum": 0,
      "title": "Light Emission",
      "type": "integer"
    },
    "3673881199": {
      "title": "Reference",
      "type": "string"
    },
    "3915697282": {
      "$metaProperties": {
        "CEREAL_EDITOR_SCHEMA_TAG": "type:color"
      },
      "oneOf": [
        {
          "pattern": "^#[a-fA-F0-9]{6}$",
          "type": "string"
        },
        {
          "items": {
            "type": "integer"
          },
          "maxItems": 3,
          "minItems": 3,
          "type": "array"
        }
      ],
      "title": "Color255RGB"
    },
    "471923105": {
      "properties": {
        "minecraft:destruction_particles": {
          "$ref": "#/definitions/3527967830",
          "description": "Sets the particles that will be used when block is destroyed. This component can be omitted."
        },
        "minecraft:display_name": {
          "$ref": "#/definitions/2879220220",
          "description": "Specifies the language file key that maps to what text will be displayed when you hover over the block in your inventory and hotbar. If the string given can not be resolved as a loc string, the raw string given will be displayed. If this component is omitted, the name of the block will be used as the display name."
        },
        "minecraft:geometry": {
          "$ref": "#/definitions/1483802163",
          "description": "The component that describes the geometry to use to render this block. It can be specified as a JSON object with the following fields, or simply as a string containing the description identifier of the geometry to use to render this block. This identifier must either match an existing geometry identifier in any of the loaded resource packs or be one of the currently supported Vanilla identifiers: \"minecraft:geometry.full_block\" or \"minecraft:geometry.cross\"."
        },
        "minecraft:light_dampening": {
          "$ref": "#/definitions/2155690250",
          "description": "The amount that light will be dampened when it passes through the block. Higher value means the light will be dampened more."
        },
        "minecraft:light_emission": {
          "$ref": "#/definitions/3655705218",
          "description": "The amount of light this block will emit. Higher value means more light will be emitted."
        },
        "minecraft:map_color": {
          "$ref": "#/definitions/1567399336",
          "description": "Sets the color and optional tint of the block when rendered to a map."
        },
        "minecraft:material_instances": {
          "$ref": "#/definitions/800260518",
          "description": "The material instances for a block.\nMaps face or material_instance names in a geometry file to an actual material instance. Material instance can either be a full material instance or a name to another already defined instance.\nLimited to 64 instances."
        },
        "minecraft:support": {
          "$ref": "#/definitions/2279409622",
          "description": "Defines the support shape of the block. Currently only allows for blocks to have the same shape as a Vanilla fence and Vanilla stair. To work with custom stairs, requires the use of \"minecraft:vertical_half\" and \"minecraft:cardinal_direction\" or \"minecraft:facing_direction\" which can be set through the \"minecraft:placement_direction\" block trait. Custom blocks without this component will default to unit cube support. The type of support shape for this block. Currently, the options are: \"fence\" and \"stair\"."
        },
        "minecraft:tags": {
          "$ref": "#/definitions/2735968029",
          "description": "Use this component to define tags, vanilla or custom. Valid tags are of the format \"namespace:tag_name\". The array of tags must be non-empty."
        }
      },
      "title": "Components",
      "type": "object"
    },
    "800260518": {
      "additionalProperties": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/definitions/840481292",
            "description": "A material instance definition to map to a material instance in a geometry file. The material instance \"*\" will be used for any materials that don't have a match."
          }
        ]
      },
      "description": "The material instances for a block.\nMaps face or material_instance names in a geometry file to an actual material instance. Material instance can either be a full material instance or a name to another already defined instance.\nLimited to 64 instances.",
      "maxProperties": 64,
      "propertyNames": {
        "pattern": "^[a-zA-Z0-9_.:*]+$",
        "type": "string"
      },
      "title": "Material Instances Component",
      "type": "object"
    },
    "840481292": {
      "description": "A material instance definition to map to a material instance in a geometry file. The material instance \"*\" will be used for any materials that don't have a match.",
      "properties": {
        "alpha_masked_tint": {
          "description": "Is the tint multiplied by the alpha channel of the texture (similar to grass_block's sides). Requires a \"tint_method\" other than \"none\" and a \"render_method\" set to \"opaque\"",
          "type": "boolean"
        },
        "ambient_occlusion": {
          "description": "Should this material have ambient occlusion applied when lighting? If true, shadows will be created around and underneath the block. Optionally can be constructed with float to control exponent applied to ao value after lighting.",
          "maximum": 10,
          "minimum": 0,
          "type": "number"
        },
        "emissive": {
          "description": "Should this material be rendered as emissive",
          "type": "boolean"
        },
        "face_dimming": {
          "description": "Is this material dimmed by the direction it's facing",
          "type": "boolean"
        },
        "isotropic": {
          "description": "Is the faces that this material is applied to randomize their UVs",
          "type": "boolean"
        },
        "render_method": {
          "description": "The render method to use. Each material of the block must use the same. The render method can be one of these options:\n\"opaque\" - Used for a regular block texture without an alpha layer. Does not allow for transparency or translucency.\n\"double_sided\" - Used for completely disabling backface culling.\n\"blend\" - Used for a block like stained glass. Allows for transparency and translucency (slightly transparent textures).\n\"alpha_test\" - Used for a block like the vanilla (unstained) glass. Does not allow for translucency, only fully opaque or fully transparent textures. Also disables backface culling.\n\"alpha_test_single_side\" - Same as \"alpha_test\" but with backface culling.\n\"blend_to_opaque\" - Same as \"blend\" but turn opaque in the distance.\n\"alpha_test_to_opaque\" - Same as \"alpha_test\" but turn opaque in the distance instead of disappearing.\n\"alpha_test_single_side_to_opaque\" - Same as \"alpha_test_single_side\" but turn opaque in the distance instead of disappearing.",
          "enum": [
            "double_sided",
            "blend",
            "blend_to_opaque",
            "opaque",
            "alpha_test_to_opaque",
            "alpha_test",
            "alpha_test_single_side",
            "alpha_test_single_side_to_opaque"
          ],
          "title": "Block Render Layer",
          "type": "string"
        },
        "texture": {
          "$ref": "#/definitions/3673881199",
          "description": "Texture name for the material."
        },
        "tint_method": {
          "description": "Tint multiplied to the color. Tint method logic varies, but often refers to the \"rain\" and \"temperature\" of the biome the block is placed in to compute the tint. Supported tint methods are \"none\", \"default_foliage\", \"birch_foliage\", \"evergreen_foliage\", \"dry_foliage\", \"grass\" and \"water\"",
          "enum": [
            "none",
            "default_foliage",
            "birch_foliage",
            "evergreen_foliage",
            "dry_foliage",
            "grass",
            "water"
          ],
          "title": "Tint Method",
          "type": "string"
        }
      },
      "title": "Material Instance",
      "type": "object"
    }
  },
  "properties": {
    "components": {
      "$ref": "#/definitions/471923105",
      "propertyNames": {
        "pattern": "^(?!(minecraft:support)$)",
        "type": "string"
      },
      "x-runtime-constraint-description": "Block needs both a geometry and material instances component."
    },
    "condition": {
      "type": "string"
    },
    "mOrderedV1CustomComponents": {
      "deprecated": true,
      "items": {
        "type": "string"
      },
      "type": "array"
    }
  },
  "required": [
    "components",
    "condition"
  ],
  "title": "Permutation",
  "type": "object",
  "x-format-version": "1.21.110"
}